{"version":3,"sources":["Components/SignIn/ToggleableForm/SignIn.js","Components/SignIn/ToggleableForm/SignUp.js","Components/SignIn/ToggleableForm/ToggleableForm.js","Components/App/Navigation/SidebarNavigation.js","user-context.js","Components/App/Navigation/sidebar.js","Components/App/MainAppContent/Dashboard/Summary/Summary.js","Components/App/MainAppContent/Dashboard/CreateButton.js","Components/App/MainAppContent/Dashboard/EditableTransaction.js","Components/App/MainAppContent/Dashboard/Dashboard.js","Components/App/MainAppContent/Charts/Charts.js","Components/App/MainAppContent/Calander/CalenderToggler.js","Components/App/MainAppContent/Calander/MonthSelector.js","Components/App/MainAppContent/Calander/Calender.js","Components/App/MainAppContent/Create/IncomeExpenseToggle.js","Components/App/MainAppContent/Create/Icon.js","Components/App/MainAppContent/Create/CategoryIcons.js","Components/App/MainAppContent/Create/IconSubmitForm.js","Components/App/MainAppContent/Create/SubmitForm.js","Components/App/MainAppContent/Create/Create.js","Components/App/MainAppContent/MainAppContent.js","Components/App/MainAppContainer.js","Components/Container/container.js","App.js","serviceWorker.js","index.js","img/default-icon.jpeg","img/no-image.jpeg"],"names":["SignIn","state","Username","Password","onFieldChange","e","target","placeholder","setState","value","handleFormSubmit","preventDefault","console","log","props","handleLogInForm","username","password","authenticateUser","credentials","fetch","method","body","JSON","stringify","headers","then","res","className","onChange","this","type","required","onClick","onFormToggle","Component","SignUp","Confirm","handleSubmit","handleSignUpForm","registerUser","data","ToggleableForm","handleFormToggle","signIn","logInSuccess","SidebarNavigation","to","icon","faColumns","faChartLine","faBars","faBell","faCogs","signOut","faSignOutAlt","UserContext","createContext","transactions","_id","imageHex","authenticated","jwt","updateUserData","setJwt","getUserData","requestUpdate","selectedMonth","selectedYear","updateSelectedMonth","updateSelectedYear","UserProvider","newUserData","sort","a","b","Date","date","settings","img","sessionStorage","removeItem","token","getItem","response","json","parsedJson","month","year","getMonth","getFullYear","Provider","children","React","UserConsumer","Consumer","sidebar","context","SidebarUserPhoto","upload","fileURL","file","toggleOpenForm","handleFileChange","URL","createObjectURL","files","onFileSubmit","formData","FormData","append","status","Fragment","src","arrayBufferToBase64","ThumbnailPicture","alt","NoImage","buffer","binary","slice","call","Uint8Array","forEach","String","fromCharCode","window","btoa","Summary","setTotalIncomeAndExpense","totalExpense","totalIncome","transaction","amount","totalIncomeAndExpense","CreateButton","faPlus","EditableTransaction","open","getTransactionIcon","category","expenseCategoriesAndIcons","filter","expense","incomeCategoriesAndIcons","income","toggleExpand","handleDeleteTransaction","onDeleteTransaction","id","iconStyle","color","toUTCString","split","join","style","description","Dashboard","totalExpenses","handleDeleteTransactions","transactionId","transaction_id","componentDidMount","componentWillReceiveProps","map","key","Charts","handleCategorySelect","innerText","getChartTransactions","toLowerCase","onCategorySelect","CategorySelector","ChartRenderer","createChartData","found","sum","i","length","push","angle","label","createRandomHexColour","literals","hexColor","getRandomInt","min","max","Math","ceil","floor","random","myData","chartInformation","chartItem","percent","round","width","height","showLabels","colorType","animation","ChartInformationItem","str","bgColor","backgroundColor","charAt","toUpperCase","CalenderToggler","openMonthSelector","MonthSelector","decrementYear","incrementYear","handleMonthSelect","clickedMonth","onSelectMonthAndYear","months","monthsArray","monthName","onMonthSelect","Month","YearSelector","Calender","handleSelectMonthAndYear","updateContextMonth","updateContextYear","IncomeExpenseToggle","activeType","onToggle","Icon","CategoryIcons","icons","IconSubmitForm","display","SubmitForm","onAmountChange","onDescriptionChange","onSubmit","onDateSelect","for","name","class","Create","redirect","handleTypeToggle","handleDateSelect","getSubmitFormIcon","handleCreateSubmit","submitTransaction","MainAppContent","filterTransactionsByMonth","transactionDate","exact","path","render","MainAppContainer","getTransactionData","setUserData","userData","default","Container","logIn","loggedIn","handleLogInResponse","setItem","handleRegisterPageRequest","onRegisterPageRequest","Landing","library","add","faUtensils","faHome","faCar","faGamepad","faFileInvoiceDollar","faPhoneSquare","faNetworkWired","faGlassCheers","faTv","faStar","faWallet","faGift","faUndo","faMoneyCheckAlt","faEdit","faTrashAlt","faSortDown","faSortUp","App","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"qSAkEeA,G,iNA7DXC,MAAQ,CACJC,SAAU,GACVC,SAAU,I,EAGdC,cAAgB,SAACC,GAGe,aAAzBA,EAAEC,OAAOC,YACR,EAAKC,SAAS,CAACN,SAAUG,EAAEC,OAAOG,QAElC,EAAKD,SAAS,CAACL,SAAUE,EAAEC,OAAOG,S,EAM1CC,iBAAmB,SAACL,GAChBA,EAAEM,iBAEFC,QAAQC,IAAI,EAAKZ,OAEjB,EAAKa,MAAMC,gBAAgB,CAACC,SAAU,EAAKf,MAAMC,SAAUe,SAAU,EAAKhB,MAAME,Y,EAKpFe,iBAAmB,SAACC,GAChB,OAAOC,MAAM,SAAU,CACnBC,OAAQ,OACRC,KAAMC,KAAKC,UAAUL,GACrBM,QAAS,CACL,OAAU,mBACV,eAAgB,sBAErBC,KAAK,SAAAC,GAAG,OAAIf,QAAQC,IAAIc,M,wEAI3B,OACI,yBAAKC,UAAU,kBACX,yBAAKA,UAAU,yBACX,sCAGJ,0BAAMA,UAAU,uBACZ,2BAAOC,SAAUC,KAAK1B,cAAewB,UAAU,2BAA0BG,KAAK,WAAWxB,YAAY,WAAWyB,UAAQ,IACxH,2BAAOH,SAAUC,KAAK1B,cAAewB,UAAU,2BAA2BG,KAAK,WAAWxB,YAAY,WAAWyB,UAAQ,IAEzH,2BAAOC,QAASH,KAAKpB,iBAAkBkB,UAAU,6BAA6BG,KAAK,SAAStB,MAAM,YAEtG,yBAAKmB,UAAU,yBACX,oDACA,uBAAGA,UAAU,OAAOK,QAASH,KAAKhB,MAAMoB,cAAxC,kB,GAvDCC,cCmENC,E,2MAjEXnC,MAAQ,CACJC,SAAU,GACVC,SAAU,GACVkC,QAAS,I,EAGbC,aAAe,SAACjC,GACZA,EAAEM,iBAIF,EAAKG,MAAMyB,iBAAiB,CAACvB,SAAU,EAAKf,MAAMC,SAAUe,SAAU,EAAKhB,MAAME,Y,EAIrFqC,aAAe,SAACC,GACZ,OAAOrB,MAAM,YAAc,CACvBC,OAAQ,OACRC,KAAMC,KAAKC,UAAUiB,GACrBhB,QAAS,CACP,OAAU,mBACV,eAAgB,sBAEjBC,KAAK,SAAAC,GAAG,OAAIf,QAAQC,IAAIc,M,EAGjCvB,cAAgB,SAACC,GAEbO,QAAQC,IAAIR,EAAEC,OAAOC,aACO,aAAzBF,EAAEC,OAAOC,YACR,EAAKC,SAAS,CAACN,SAAUG,EAAEC,OAAOG,QACH,aAAzBJ,EAAEC,OAAOC,YACf,EAAKC,SAAS,CAACL,SAAUE,EAAEC,OAAOG,QAElC,EAAKD,SAAS,CAAC6B,QAAShC,EAAEC,OAAOG,S,wEASrC,OADAG,QAAQC,IAAIiB,KAAKhB,OAEb,yBAAKc,UAAU,kBACX,yBAAKA,UAAU,yBACX,uCAGJ,0BAAMA,UAAU,uBACZ,2BAAOC,SAAUC,KAAK1B,cAAewB,UAAU,2BAA0BG,KAAK,WAAWxB,YAAY,WAAWyB,UAAQ,IACxH,2BAAOH,SAAUC,KAAK1B,cAAewB,UAAU,2BAA2BG,KAAK,WAAWxB,YAAY,WAAWyB,UAAQ,IACzH,2BAAOH,SAAUC,KAAK1B,cAAewB,UAAU,2BAA2BG,KAAK,WAAWxB,YAAY,mBAAmByB,UAAQ,IACjI,2BAAOC,QAASH,KAAKQ,aAAcV,UAAU,6BAA6BG,KAAK,SAAStB,MAAM,aAElG,yBAAKmB,UAAU,yBACX,uDACA,uBAAGA,UAAU,OAAOK,QAASH,KAAKhB,MAAMoB,cAAxC,kB,GA5DCC,aCyCNO,E,YApCX,WAAY5B,GAAO,IAAD,8BACd,4CAAMA,KAOV6B,iBAAmB,SAACtC,GAChB,EAAKG,SAAS,CAACoC,QAAS,EAAK3C,MAAM2C,UANnC,EAAK3C,MAAQ,CACT2C,QAAQ,GAJE,E,sEAkBd,OAFAhC,QAAQC,IAAIiB,KAAKhB,OAEbgB,KAAK7B,MAAM2C,OAEP,yBAAKhB,UAAU,mBACX,kBAAC,EAAD,CAAQM,aAAcJ,KAAKa,iBAAkB5B,gBAAiBe,KAAKhB,MAAMC,gBAAiB8B,aAAcf,KAAKhB,MAAM+B,gBAKvH,yBAAKjB,UAAU,mBACX,kBAAC,EAAD,CAAQM,aAAcJ,KAAKa,iBAAkBJ,iBAAkBT,KAAKhB,MAAMyB,wB,GA7BjEJ,a,iGCiEdW,E,iLA3DP,OACI,yBAAKlB,UAAY,gCACb,kBAAC,IAAD,CAAMmB,GAAG,cACL,yBAAKnB,UAAU,qCACX,6BACI,kBAAC,IAAD,CAAiBoB,KAAMC,OAE3B,4CAKR,kBAAC,IAAD,CAAMF,GAAG,WACL,yBAAKnB,UAAU,qCACX,6BACI,kBAAC,IAAD,CAAiBoB,KAAME,OAE3B,yCAKR,yBAAKtB,UAAU,qCACX,6BACI,kBAAC,IAAD,CAAiBoB,KAAMG,OAE3B,4CAIJ,yBAAKvB,UAAU,qCACX,6BACI,kBAAC,IAAD,CAAiBoB,KAAQI,OAE7B,+CAIJ,yBAAKxB,UAAU,qCACX,6BACI,kBAAC,IAAD,CAAiBoB,KAAQK,OAE7B,0CAIJ,yBAAKzB,UAAU,oCAAoCK,QAASH,KAAKhB,MAAMwC,SACnE,6BACI,kBAAC,IAAD,CAAiBN,KAAQO,OAE7B,6C,GApDYpB,aCN1BqB,EAAcC,wBAAc,CAC9BzC,SAAU,GACV0C,aAAc,GACdC,IAAK,GACLC,SAAU,GACVC,eAAe,EACfC,IAAK,GACLC,eAAgB,aAChBlB,aAAc,aACdS,QAAS,aACTU,OAAQ,aACRC,YAAa,aACbC,cAAe,aACfC,cAAe,GACfC,aAAc,GACdC,oBAAqB,aACrBC,mBAAoB,eAGXC,EAAb,2MAKIR,eAAiB,SAAAS,GACb5D,QAAQC,IAAI2D,GACZA,EAAYd,aAAae,KAAK,SAACC,EAAGC,GAC9B,OAAO,IAAIC,KAAKD,EAAEE,MAAQ,IAAID,KAAKF,EAAEG,QAEzCjE,QAAQC,IAAI2D,EAAYd,cACxB,EAAKlD,SAAS,CAACQ,SAAUwD,EAAYxD,SAAU0C,aAAcc,EAAYd,aAAcC,IAAKa,EAAYb,IAAKC,SAAUY,EAAYM,SAASC,IAAItC,KAAKA,QAX7J,EAcII,aAAe,WACXjC,QAAQC,IAAI,2BACZ,EAAKL,SAAS,CAACqD,eAAe,IAC9B,EAAKI,eAjBb,EAqBID,OAAS,SAAAF,GACLlD,QAAQC,IAAI,qBACZ,EAAKL,SAAS,CAACsD,IAAKA,KAvB5B,EA0BIR,QAAU,WACN,EAAK9C,SAAS,CAACqD,eAAe,IAC9BmB,eAAeC,WAAW,QA5BlC,EA+BIhB,YAAc,WACV,IAAIiB,EAAQF,eAAeG,QAAQ,OAEnC/D,MAAM,aAAc,CAChBC,OAAQ,MACRI,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2ByD,MAEhCxD,KAAK,SAAA0D,GACJ,OAAOA,EAASC,SACjB3D,KAAK,SAAA4D,GACJ1E,QAAQC,IAAIyE,GACZ,EAAKvB,eAAeuB,MA5ChC,EAiDIpB,cAAgB,WACZtD,QAAQC,IAAI,oBACZ,EAAKoD,eAnDb,EAsDII,oBAAsB,SAACkB,GACnB3E,QAAQC,IAAI,kCAAoC,EAAKZ,MAAMkE,eAC3D,EAAK3D,SAAS,CAAC2D,cAAeoB,KAxDtC,EA2DIjB,mBAAqB,SAACkB,GAClB5E,QAAQC,IAAI,iCAAmC,EAAKZ,MAAMmE,cAC1D,EAAK5D,SAAS,CAAC4D,aAAcoB,KA7DrC,EAgEIvF,MAAQ,CACJe,SAAU,GACV0C,aAAc,GACdC,IAAK,GACLC,SAAU,KACVO,eAAe,IAAIS,MAAOa,WAC1BrB,cAAc,IAAIQ,MAAOc,cACzB3B,eAAgB,EAAKA,eACrBlB,aAAc,EAAKA,aACnBmB,OAAQ,EAAKA,OACbV,QAAS,EAAKA,QACdW,YAAa,EAAKA,YAClBC,cAAe,EAAKA,cACpBG,oBAAqB,EAAKA,oBAC1BC,mBAAoB,EAAKA,oBA9EjC,wEAoFQ,OACI,kBAACd,EAAYmC,SAAb,CAAsBlF,MAAOqB,KAAK7B,OAC7B6B,KAAKhB,MAAM8E,cAtF5B,GAAkCC,IAAM1D,WA4F3B2D,EAAetC,EAAYuC,SC1GlCC,E,iLAIE,OACI,yBAAKpE,UAAU,eACX,yBAAKA,UAAU,oBAIX,kBAACkE,EAAD,KAEQ,SAAAG,GAAO,OACH,kBAAC,EAAD,CAAkB/B,cAAe+B,EAAQ/B,cAAeN,SAAUqC,EAAQrC,aAKtF,yBAAKhC,UAAU,+BACX,2BAAIE,KAAKhB,MAAME,WAEnB,yBAAKY,UAAU,+BACX,uBAAGA,UAAU,oBAGrB,yBAAKA,UAAU,qBACX,kBAACkE,EAAD,KAEQ,SAAAG,GAAO,OACH,kBAAC,EAAD,CAAmB3C,QAAS2C,EAAQ3C,kB,GA7B9CnB,aA4ChB+D,E,2MAEFjG,MAAQ,CACJkG,QAAQ,EACRC,QAAS,KACTC,KAAM,M,EAGVC,eAAiB,WACb1F,QAAQC,IAAI,0BACZ,EAAKL,SAAS,CAAC2F,QAAS,EAAKlG,MAAMkG,U,EAGvCI,iBAAmB,SAAClG,GAChB,EAAKG,SAAS,CACV4F,QAASI,IAAIC,gBAAgBpG,EAAEC,OAAOoG,MAAM,IAC5CL,KAAMhG,EAAEC,OAAOoG,MAAM,M,EAK7BC,a,sCAAe,WAAOtG,GAAP,mBAAAqE,EAAA,4DAEXrE,EAAEM,iBAEIuE,EAAQF,eAAeG,QAAQ,OACrCvE,QAAQC,IAAI,EAAKZ,MAAMoG,OAEjBO,EAAW,IAAIC,UAEZC,OAAO,gBAAiB,EAAK7G,MAAMoG,MATjC,SAYOjF,MAAM,cAAe,CACnCC,OAAQ,OACRI,QAAS,CACL,OAAU,mBAEV,cAAgB,UAAhB,OAA2ByD,IAE/B5D,KAAMsF,IAnBC,OAuBO,OAXZjF,EAZK,QAuBJoF,SAEH,EAAKvG,SAAS,CAAC2F,QAAS,EAAKlG,MAAMkG,SAEnC,EAAKrF,MAAMoD,iBAKftD,QAAQC,IAAIc,GAhCD,0C,8HAyCX,OAAGG,KAAK7B,MAAMkG,OAEN,kBAAC,IAAMa,SAAP,KACI,yBAAKpF,UAAU,0BAA0BK,QAASH,KAAKwE,gBACnD,yBAAKW,IAA4B,MAAvBnF,KAAKhB,MAAM8C,SAAmBsD,EAAoBpF,KAAKhB,MAAM8C,UAAW,CAACuD,sBAAmBC,IAAI,YAAYnF,QAASH,KAAKwE,kBAExI,yBAAK1E,UAAU,sBACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,4BACX,4BAAQA,UAAU,QAAQK,QAASH,KAAKwE,gBAAxC,MAEJ,yBAAK1E,UAAU,qCACX,0BAAMA,UAAU,2BACZ,yBAAKA,UAAU,8BACX,yBAAKqF,IAAKnF,KAAK7B,MAAMmG,QAAUtE,KAAK7B,MAAMmG,QAAUiB,IAASD,IAAI,oBAErE,2BAAOrF,KAAK,OAAOF,SAAUC,KAAKyE,mBAElC,2BAAOxE,KAAK,SAAStB,MAAM,SAASmB,UAAU,yBAAyBK,QAASH,KAAK6E,oBAWzG,yBAAK/E,UAAU,0BAA0BK,QAASH,KAAKwE,gBACnD,yBAAKW,IAA4B,MAAvBnF,KAAKhB,MAAM8C,SAAmBsD,EAAoBpF,KAAKhB,MAAM8C,UAAW,CAACuD,sBAAmBC,IAAI,YAAYnF,QAASH,KAAKwE,sB,GA5FzHnE,aAoGzB+E,EAAsB,SAACI,GACzB,IACIC,EAAS,GAGb,MAFY,GAAGC,MAAMC,KAAK,IAAIC,WAAWJ,IACnCK,QAAQ,SAAChD,GAAD,OAAO4C,GAAUK,OAAOC,aAAalD,KAH/B,0BAIAmD,OAAOC,KAAKR,IAGrBvB,I,QCpGAgC,G,uNAvDXC,yBAA2B,SAACvE,GACxB,IAAIwE,EAAe,EACfC,EAAc,EAclB,OAXGzE,GACH,EAAK5C,MAAM4C,aAAaiE,QAAQ,SAAAS,GACJ,WAArBA,EAAYrG,KACXoG,GAAeC,EAAYC,OAE3BH,GAAgBE,EAAYC,SAIpCzH,QAAQC,IAAIqH,EAAe,IAAMC,GAE1B,CAACA,YAAaA,EAAaD,aAAcA,I,wEAOhD,IAAMI,EAAwBxG,KAAKmG,yBAAyBnG,KAAKhB,MAAM4C,cAGvE,OADA9C,QAAQC,IAAIiB,KAAKhB,OAEb,yBAAKc,UAAU,WACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,4BACX,6BACI,uBAAGA,UAAU,iCAAb,UACA,uBAAGA,UAAU,mCAAmC0G,EAAsBH,eAI9E,yBAAKvG,UAAU,4BACX,6BACI,uBAAGA,UAAU,iCAAb,YACA,uBAAGA,UAAU,mCAAmC0G,EAAsBJ,gBAI9E,yBAAKtG,UAAU,4BACX,6BACI,uBAAGA,UAAU,iCAAb,WACA,uBAAGA,UAAU,mCAAmC0G,EAAsBH,YAAcG,EAAsBJ,sB,GAhDhH/F,cCgBPoG,G,MAbM,WAIjB,OACI,yBAAK3G,UAAU,eACX,kBAAC,IAAD,CAAiBoB,KAAMwF,SCR7BC,E,2MAEFxI,MAAQ,CACJyI,MAAM,G,EAGVC,mBAAqB,SAAC5G,EAAM6G,GAExB,MAAa,YAAT7G,EACQ8G,EAA0BC,OAAO,SAACC,GAE1C,OAAOA,EAAQH,WAAaA,IAGrB,GAAG5F,KAEEgG,EAAyBF,OAAO,SAACG,GACzC,OAAOA,EAAOL,WAAaA,IAGpB,GAAG5F,M,EAKtBkG,aAAe,WACX,EAAK1I,SAAS,CAACkI,MAAO,EAAKzI,MAAMyI,Q,EAGrCS,wBAA0B,WACtB,EAAKrI,MAAMsI,oBAAoB,EAAKtI,MAAMuI,K,wEAK1C,IAAMC,EAAY,CACdC,MAA2B,YAApBzH,KAAKhB,MAAMiB,KAAqB,UAAY,WAKjD8C,EAAO,IAAID,KAAK9C,KAAKhB,MAAM+D,MAAM2E,cAAcC,MAAM,KAAKjC,MAAM,EAAG,GAAGkC,KAAK,KAEjF,OAAG5H,KAAK7B,MAAMyI,KAEN,yBAAK9G,UAAU,iCAAiCK,QAASH,KAAKoH,cAC1D,yBAAKtH,UAAU,oCACX,yBAAKA,UAAU,kCACX,2BAAKiD,IAET,yBAAKjD,UAAU,kCACX,2BAAIE,KAAKhB,MAAMiB,KAAf,KAAuBD,KAAKhB,MAAMuH,UAG1C,yBAAKzG,UAAU,oCACX,yBAAKA,UAAU,wCAAwC+H,MAAOL,GAE1D,kBAAC,IAAD,CAAiBtG,KAAI,UAAKlB,KAAK6G,mBAAmB7G,KAAKhB,MAAMiB,KAAMD,KAAKhB,MAAM8H,cAIlF,yBAAKhH,UAAU,6CACX,2BAAIE,KAAKhB,MAAM8H,SAAf,KAA2B9G,KAAKhB,MAAM8I,cAE1C,yBAAKhI,UAAU,2CACX,2BACyB,YAApBE,KAAKhB,MAAMiB,KAAX,WAAoCD,KAAKhB,MAAMuH,QAAWvG,KAAKhB,MAAMuH,UAKlF,yBAAKzG,UAAU,kCACX,yBAAKA,UAAU,uCACX,kBAAC,IAAD,CAAiBoB,KAAM,UAE3B,yBAAKpB,UAAU,wCAAwCK,QAASH,KAAKqH,yBACjE,kBAAC,IAAD,CAAiBnG,KAAM,iBAOvC,yBAAKpB,UAAU,4BAA4BK,QAASH,KAAKoH,cACrD,yBAAKtH,UAAU,oCACX,yBAAKA,UAAU,kCACX,2BAAKiD,IAET,yBAAKjD,UAAU,kCACX,2BAAIE,KAAKhB,MAAMiB,KAAf,KAAuBD,KAAKhB,MAAMuH,UAG1C,yBAAKzG,UAAU,oCACX,yBAAKA,UAAU,wCAAwC+H,MAAOL,GAE1D,kBAAC,IAAD,CAAiBtG,KAAI,UAAKlB,KAAK6G,mBAAmB7G,KAAKhB,MAAMiB,KAAMD,KAAKhB,MAAM8H,cAIlF,yBAAKhH,UAAU,6CACX,2BAAIE,KAAKhB,MAAM8H,SAAf,KAA2B9G,KAAKhB,MAAM8I,cAE1C,yBAAKhI,UAAU,2CACX,2BACyB,YAApBE,KAAKhB,MAAMiB,KAAX,WAAoCD,KAAKhB,MAAMuH,QAAWvG,KAAKhB,MAAMuH,e,GAxGhElG,aAiI5B0G,EAA4B,CAC9B,CACG7F,KAAM,WACN4F,SAAU,QAEd,CACI5F,KAAM,OACN4F,SAAU,QAEb,CACG5F,KAAM,MACN4F,SAAU,OAEb,CACG5F,KAAM,UACN4F,SAAU,iBAEb,CACG5F,KAAM,sBACN4F,SAAU,SAEb,CACG5F,KAAM,eACN4F,SAAU,SAEb,CACG5F,KAAM,gBACN4F,SAAU,YAEb,CACG5F,KAAM,eACN4F,SAAU,YAEb,CACG5F,KAAM,KACN4F,SAAU,eAEb,CACG5F,KAAM,OACN4F,SAAU,kBAIRI,EAA2B,CAChC,CACIhG,KAAM,SACN4F,SAAU,UAEd,CACI5F,KAAM,aACN4F,SAAU,aAEd,CACI5F,KAAM,OACN4F,SAAU,QAEd,CACI5F,KAAM,kBACN4F,SAAU,cAEd,CACI5F,KAAM,OACN4F,SAAU,WAKHH,IC3EAoB,E,2MAlHP5J,MAAQ,CACJkI,YAAa,GACb2B,cAAe,I,EAOvB7B,yBAA2B,WACvB,IAAIC,EAAe,EACfC,EAAc,EAGf,EAAKrH,MAAM4C,cACd,EAAK5C,MAAM4C,aAAaiE,QAAQ,SAAAS,GACJ,WAArBA,EAAYrG,KACXoG,GAAeC,EAAYC,OAE3BH,GAAgBE,EAAYC,SAIpCzH,QAAQC,IAAIqH,EAAe,IAAMC,GAEjC,EAAK3H,SAAS,CAAC2H,YAAaA,EAAa2B,cAAe5B,K,EAG5D6B,yB,sCAA2B,WAAOC,GAAP,iBAAAtF,EAAA,4DAEvB9D,QAAQC,IAAIU,KAAKC,UAAU,CAACyI,eAAgBD,KACxC9E,EAAQF,eAAeG,QAAQ,OAHZ,SAKF/D,MAAM,uBAAwB,CAC/CC,OAAQ,SACRC,KAAMC,KAAKC,UAAU,CAACyI,eAAgBD,IACtCvI,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2ByD,MAVZ,OAKnBE,EALmB,OAanBxE,QAAQC,IAAIuE,GAIW,MAApBA,EAAS2B,QACR,EAAKjG,MAAMoD,gBAMnBtD,QAAQC,IAAI,kCAAmCmJ,GAxBxB,yC,wDA6B3BE,kBAAoB,a,EAIpBC,0BAA4B,a,wEAIlB,IAAD,OAEDzG,EAAe,KAuBnB,OAnBG5B,KAAKhB,MAAM4C,eACVA,EAAe5B,KAAKhB,MAAM4C,aAAa0G,IAAI,SAAChC,GAAD,OACvC,kBAAC,EAAD,CAEIiC,IAAKjC,EAAYzE,IACjB0F,GAAIjB,EAAYzE,IAChB5B,KAAMqG,EAAYrG,KAClB6G,SAAUR,EAAYQ,SACtB/D,KAAMuD,EAAYvD,KAClBwD,OAAQD,EAAYC,OACpBuB,YAAaxB,EAAYwB,YACzBR,oBAAqB,EAAKW,8BAOtCnJ,QAAQC,IAAR,uCAA4CiB,KAAKhB,MAAM4C,eAEnD,yBAAK9B,UAAU,uBAEX,kBAAC,EAAD,CAAS8B,aAAc5B,KAAKhB,MAAM4C,eAClC,yBAAK9B,UAAU,kCACV8B,GAKL,kBAAC,IAAD,CAAMX,GAAG,WACL,kBAAC,EAAD,Y,GA1GIZ,a,QCIlBmI,G,iNAEFrK,MAAQ,CACJ2I,SAAU,M,EAGd2B,qBAAuB,SAAClK,GACpBO,QAAQC,IAAIR,EAAEC,OAAOkK,WACrB,EAAKhK,SAAS,CAACoI,SAAUvI,EAAEC,OAAOkK,a,EAItCC,qBAAuB,WAEnB,IAAI,EAAKxK,MAAM2I,SACX,OAAO,EAAK9H,MAAM4C,aAGtB,IAAM3B,EAAO,EAAK9B,MAAM2I,SAAS8B,cAOjC,OALqB,EAAK5J,MAAM4C,aAAaoF,OAAO,SAAAV,GAEhD,OAAQA,EAAYrG,OAASA,K,wEAUjC,OAAGD,KAAK7B,MAAM2I,UACV9G,KAAK2I,uBAIL,yBAAK7I,UAAU,oBAEX,kBAAC,EAAD,CAAkB+I,iBAAkB7I,KAAKyI,uBACzC,kBAAC,EAAD,CAAe3B,SAAU9G,KAAK7B,MAAM2I,SAAUlF,aAAc5B,KAAK2I,2BAKjE,yBAAK7I,UAAU,oBAEf,kBAAC,EAAD,CAAkB+I,iBAAkB7I,KAAKyI,4B,GA/CpCpI,cAwDfyI,EAAmB,SAAC9J,GAEtB,OACI,yBAAKc,UAAU,qBACX,yBAAKA,UAAU,0BACX,uBAAGK,QAASnB,EAAM6J,kBAAlB,WAEJ,yBAAK/I,UAAU,0BACX,uBAAGK,QAASnB,EAAM6J,kBAAlB,YAEJ,yBAAK/I,UAAU,0BACX,uBAAGK,QAASnB,EAAM6J,kBAAlB,WAOVE,EAAgB,SAAC/J,GAEnB,IAAMgK,EAAkB,WACpB,IAEIC,EAFAtI,EAAO,GACPuI,EAAM,EA4BV,OAzBAlK,EAAM4C,aAAaiE,QAAQ,SAACS,GAExB2C,GAAQ,EAER,IAAI,IAAIE,EAAG,EAAGA,EAAGxI,EAAKyI,OAAQD,IAC1B,GAAGxI,EAAKwI,GAAGrC,WAAaR,EAAYQ,SAAS,CACzCnG,EAAKwI,GAAG5C,QAAUD,EAAYC,OAC9B2C,GAAO5C,EAAYC,OACnB0C,GAAQ,EACR,MAGHA,IACDtI,EAAK0I,KAAK,CAACvC,SAAUR,EAAYQ,SAAUP,OAAQD,EAAYC,SAC/D2C,GAAO5C,EAAYC,UAG3B5F,EAAKkF,QAAQ,SAAAlF,GAAI,OAAI7B,QAAQC,IAAI4B,KACjC7B,QAAQC,IAAI4B,EAAO,GAAKuI,GAOjB,CAACvI,KALRA,EAAOA,EAAK2H,IAAI,SAAAxB,GACZ,MACI,CAACwC,MAAOxC,EAASP,OAAO2C,EAAMK,MAAOzC,EAASA,SAAUW,MAAO+B,OAGnDN,IAAKA,IAGvBM,EAAwB,WAK1B,IAJA,IAAMC,EAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAElFC,EAAW,CAAC,KAERP,EAAG,EAAGA,EAAG,EAAGA,IAChBO,EAASL,KAAKI,EAASE,EAAa,EAAG,MAG3C,OAAOD,EAAS9B,KAAK,KAInB+B,EAAe,SAACC,EAAKC,GAIvB,OAHAD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GAEVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAID,GAAOA,IAMlD,GAHAZ,IAGGhK,EAAM8H,SAAS,CAEd,IAAIoD,EAASlB,IAEblK,QAAQC,IAAImL,EAAOvJ,MAEnB,IAAMwJ,EAAmBD,EAAOvJ,KAAK2H,IAAI,SAAA8B,GAAS,OAC7C,kBAAC,EAAD,CAAsB3C,MAAO2C,EAAU3C,MAAO8B,MAAOa,EAAUb,MAAOc,QAASP,KAAKQ,MAAwB,IAAlBF,EAAUd,MAAc,IAAI,OAE3H,OACI,yBAAKxJ,UAAU,4BACX,yBAAKA,UAAU,yBACX,sCAAYd,EAAM8H,SAAlB,YACA,oCAAU9H,EAAM8H,SAAhB,MAA6BoD,EAAOhB,MAExC,yBAAKpJ,UAAU,8BACVqK,GAEL,kBAAC,IAAD,CACIxJ,KAAMuJ,EAAOvJ,KACb4J,MAAO,IACPC,OAAQ,IACRC,YAAY,EACZC,UAAW,UACXC,WAAS,KAMrB,OACI,MAWNC,EAAuB,SAAC5L,GAE1B,IARgB6L,EAQZC,EAAU,CACVC,gBAAiB/L,EAAMyI,OAG3B,OACI,yBAAK3H,UAAU,mCACX,yBAAKA,UAAU,wCAAwC+H,MAAOiD,IAG9D,2BAhBW,kBADHD,EAiBO7L,EAAMuK,OAhBO,GAExBsB,EAAIG,OAAO,GAAGC,cAAgBJ,EAAInF,MAAM,GAc5C,KAA+B1G,EAAMqL,QAArC,OAMG7B,ICpLA0C,G,aAjBS,SAAClM,GAErB,OACI,yBAAKc,UAAU,mBAAmBK,QAASnB,EAAMmM,mBAC7C,yBAAKrL,UAAU,0BACX,yBAAKA,UAAU,yBACVd,EAAMyE,MADX,KACoBzE,EAAM0E,MAE1B,6BACI,kBAAC,IAAD,CAAiBxC,KAAMlC,EAAM4H,KAAO,UAAY,mBCV9DwE,E,2MAEFjN,MAAQ,CACJmE,aAAc,EAAKtD,MAAM0E,M,EAI7B2H,cAAgB,WACZ,EAAK3M,SAAS,CAAC4D,aAAc,EAAKnE,MAAMmE,aAAe,K,EAG3DgJ,cAAgB,WACZ,EAAK5M,SAAS,CAAC4D,aAAc,EAAKnE,MAAMmE,aAAe,K,EAG3DiJ,kBAAoB,SAACC,GAEjB,EAAKxM,MAAMyM,qBAAqBD,EAAc,EAAKrN,MAAMmE,e,wEAGpD,IAAD,OAEEoJ,EAASC,EAAYrD,IAAI,SAAA7E,GAAK,OAChC,kBAAC,EAAD,CAAOA,MAAOA,EAAMA,MAAOmI,UAAWnI,EAAMmI,UAAWC,cAAe,EAAKN,sBAEnF,OACI,yBAAKzL,UAAU,2BACX,yBAAKA,UAAU,kCACX,kBAAC,EAAD,CACI4D,KAAM1D,KAAK7B,MAAMmE,aACjBgJ,cAAetL,KAAKsL,cACpBD,cAAerL,KAAKqL,gBAEvBK,Q,GAjCW3H,IAAM1D,WA0C5ByL,EAAQ,SAAC9M,GAOX,OACI,yBAAKmB,QALiB,WACtBrB,QAAQC,IAAIC,GACZA,EAAM6M,cAAc7M,EAAMyE,SAIrBzE,EAAM4M,YAKbG,EAAe,SAAC/M,GAElB,OACI,yBAAKc,UAAU,gCACX,yBAAKK,QAASnB,EAAMqM,eACf,KAEL,6BACKrM,EAAM0E,MAEX,yBAAKvD,QAASnB,EAAMsM,eACf,OAMXK,EAAc,CAChB,CACIlI,MAAO,EACPmI,UAAW,OAEf,CACInI,MAAO,EACPmI,UAAW,OAEf,CACInI,MAAM,EACNmI,UAAW,OAEf,CACInI,MAAO,EACPmI,UAAW,OAEf,CACInI,MAAO,EACPmI,UAAW,OAEf,CACInI,MAAO,EACPmI,UAAW,OAEf,CACInI,MAAO,EACPmI,UAAW,OAEf,CACInI,MAAO,EACPmI,UAAW,OAEf,CACInI,MAAO,EACPmI,UAAW,OAEf,CACInI,MAAO,EACPmI,UAAW,OAEf,CACInI,MAAO,GACPmI,UAAW,OAEf,CACInI,MAAO,GACPmI,UAAW,QAOJR,IC5HTY,G,2MAEF7N,MAAQ,CACJkE,cAAe,EAAKrD,MAAMqD,cAC1BC,aAAc,EAAKtD,MAAMsD,aACzBsE,MAAM,G,EAGVuE,kBAAoB,WAChB,EAAKzM,SAAS,CAACkI,MAAO,EAAKzI,MAAMyI,Q,EAGrCqF,yBAA2B,SAACxI,EAAOC,GAC/B,EAAKhF,SAAS,CAACkI,MAAO,EAAKzI,MAAMyI,OACjC,EAAK5H,MAAMkN,mBAAmBzI,GAC9B,EAAKzE,MAAMmN,kBAAkBzI,I,wEAK7B,OAAI1D,KAAK7B,MAAMyI,KAEP,kBAAC,IAAM1B,SAAP,KACI,yBAAKpF,UAAU,2BAGX,kBAAC,EAAD,CACAqL,kBAAmBnL,KAAKmL,kBACxBvE,KAAM5G,KAAK7B,MAAMyI,KACjBnD,MAAOiI,GAAO1L,KAAKhB,MAAMqD,eACzBqB,KAAM1D,KAAKhB,MAAMsD,eA+BjB,kBAAC,EAAD,CAAeoB,KAAM1D,KAAK7B,MAAMmE,aAAcmJ,qBAAsBzL,KAAKiM,6BASrF,yBAAKnM,UAAU,sBAGX,kBAAC,EAAD,CACAqL,kBAAmBnL,KAAKmL,kBACxBvE,KAAM5G,KAAK7B,MAAMyI,KACjBnD,MAAOiI,GAAO1L,KAAKhB,MAAMqD,eACzBqB,KAAM1D,KAAKhB,MAAMsD,oB,GA7EVjC,aAoFjBqL,GAAS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAE9EM,MCpEAI,I,wLAjBP,OACI,yBAAKtM,UAAU,2BACX,yBAAKA,UAAS,0CAA+D,YAA1BE,KAAKhB,MAAMqN,WAA2B,gBAAkB,IACvGlM,QAAmC,WAA1BH,KAAKhB,MAAMqN,WAA0BrM,KAAKhB,MAAMsN,SAAW,MAEpE,uCAEJ,yBAAKxM,UAAS,yCAA8D,WAA1BE,KAAKhB,MAAMqN,WAA0B,gBAAkB,IACrGlM,QAAmC,YAA1BH,KAAKhB,MAAMqN,WAA2BrM,KAAKhB,MAAMsN,SAAW,MAErE,2C,GAdcjM,cCoBnBkM,GApBF,SAACvN,GAWN,OACI,yBAAKc,UAAU,qBAAqBK,QAVf,WAEzBnB,EAAM6J,iBAAiB7J,EAAM8H,YASrB,kBAAC,IAAD,CAAiB5F,KAAI,UAAKlC,EAAMkC,QAChC,2BAAIlC,EAAM8H,YCsCX0F,GAnDO,SAACxN,GAEnBF,QAAQC,IAAIC,EAAMyN,OAElB,IAAMA,EAAQzN,EAAMyN,MAAMnE,IAAI,SAAApH,GAAI,OAC9B,kBAAC,GAAD,CAAMA,KAAMA,EAAKA,KAAM4F,SAAU5F,EAAK4F,SAAU+B,iBAAkB7J,EAAM6J,qBAKxE,OACI,yBAAK/I,UAAU,gCAgCT2M,ICjCHC,G,iLATP,OACI,yBAAK5M,UAAU,2BACX,kBAAC,GAAD,CAAe6M,QAAS3M,KAAKhB,MAAMiB,MAAQ,KAAM4I,iBAAkB7I,KAAKhB,MAAM6J,iBAAkB4D,MAAOzM,KAAKhB,MAAMyN,a,GAJrGpM,a,oBCiEduM,G,2MA7DXzO,MAAQ,CACJoI,OAAQ,GACRuB,YAAa,I,EAGjB+E,eAAiB,SAACtO,GACdO,QAAQC,IAAIR,EAAEC,OAAOG,OAErB,EAAKD,SAAS,CAAC6H,OAAQhI,EAAEC,OAAOG,S,EAGpCmO,oBAAsB,SAACvO,GACnB,EAAKG,SAAS,CAACoJ,YAAavJ,EAAEC,OAAOG,S,EAGzC6B,aAAe,WAEX,EAAKxB,MAAM+N,SAAS,EAAK5O,MAAMoI,OAAQ,EAAKpI,MAAM2J,c,wEAKlD,OAAG9H,KAAKhB,MAAM2N,QAEN,yBAAK7M,UAAU,sBACX,yBAAKA,UAAU,+BACX,kBAAC,KAAD,CACIC,SAAUC,KAAKhB,MAAMgO,aACrBjK,KAAM/C,KAAKhB,MAAM+D,QAGzB,yBAAKjD,UAAU,2BACX,8BACI,yBAAKA,UAAU,gCACX,kBAAC,IAAD,CAAiBoB,KAAI,UAAKlB,KAAKhB,MAAMkC,KAAKA,QAC1C,2BAAIlB,KAAKhB,MAAMkC,KAAK4F,WAExB,yBAAKhH,UAAU,kCACX,2BAAOmN,IAAI,UAAX,UACA,2BAAOC,KAAK,SAAShN,UAAQ,EAACD,KAAK,SAASF,SAAUC,KAAK6M,kBAE/D,yBAAK/M,UAAU,uCACX,2BAAOmN,IAAI,eAAX,eACA,2BAAOC,KAAK,cAAcnN,SAAUC,KAAK8M,uBAE7C,yBAAKhN,UAAU,kCACX,4BAAQG,KAAK,SAASkN,MAAM,yBAAyBhN,QAASH,KAAKQ,cAAnE,WAShB,kC,GAzDSH,aCQnB+M,G,2MAEFjP,MAAQ,CACJ2I,SAAU,KACV7G,KAAM,UACN8C,KAAM,IAAID,KACVgF,YAAa,KACbvB,OAAQ,KACR8G,UAAU,G,EAGdC,iBAAmB,WAEK,YAApB,EAAKnP,MAAM8B,KAAqB,EAAKvB,SAAS,CAACuB,KAAM,SAAU6G,SAAU,OAAS,EAAKpI,SAAS,CAACuB,KAAM,UAAW6G,SAAU,Q,EAKhIyG,iBAAmB,SAAAxK,GAAI,OAAI,EAAKrE,SAAS,CAACqE,KAAMA,K,EAEhD0F,qBAAuB,SAAC3B,GAEpBhI,QAAQC,IAAI+H,GAEZ,EAAKpI,SAAS,CAACoI,SAAUA,K,EAgB7B0G,kBAAoB,WAEhB,MAAwB,YAApB,EAAKrP,MAAM8B,KACE8G,GAA0BC,OAAO,SAACC,GAE/C,OADAnI,QAAQC,IAAI,sBAAwBkI,EAAQH,SAAW,oBAAsB,EAAK3I,MAAM2I,UACjFG,EAAQH,WAAa,EAAK3I,MAAM2I,WAG3B,GAEKI,GAAyBF,OAAO,SAACG,GAC9C,OAAOA,EAAOL,WAAa,EAAK3I,MAAM2I,WAE1B,I,EAKxB2G,mBAAqB,SAAClH,EAAQuB,GAC1BhJ,QAAQC,IAAIwH,EAAS,GAAKuB,GAC1BhJ,QAAQC,IAAI,EAAKZ,OAEjB,EAAKO,SAAS,CAAC6H,OAAQA,EAAQuB,YAAaA,IAE5C,EAAK4F,kBAAkB,CAAC5G,SAAU,EAAK3I,MAAM2I,SAAU7G,KAAM,EAAK9B,MAAM8B,KAAM8C,KAAM,EAAK5E,MAAM4E,KAAMwD,OAAQA,EAAQuB,YAAaA,K,EAKtI4F,kBAAoB,SAACpH,GACjB,IAAIlD,EAAQF,eAAeG,QAAQ,OACnC,OAAO/D,MAAM,UAAW,CACpBC,OAAQ,OACRC,KAAMC,KAAKC,UAAU4G,GACrB3G,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2ByD,MAGhCxD,KAAK,SAAAC,GACJf,QAAQC,IAAIc,GACM,MAAfA,EAAIoF,SACH,EAAKjG,MAAMoD,gBACX,EAAK1D,SAAS,CAAC2O,UAAU,Q,wEAQjC,OAAGrN,KAAK7B,MAAMkP,SAEN,kBAAC,IAAD,CAAUpM,GAAG,eAIjB,yBAAKnB,UAAU,oBACX,kBAAC,GAAD,CAAqBuM,WAAYrM,KAAK7B,MAAM8B,KAAMqM,SAAUtM,KAAKsN,mBAEjE,kBAAC,GAAD,CAEIrN,KAAMD,KAAK7B,MAAM8B,KACjB4I,iBAAkB7I,KAAKyI,qBACvBgE,MAA2B,YAApBzM,KAAK7B,MAAM8B,KAAqB8G,GAA4BG,KAIvE,kBAAC,GAAD,CAEI8F,aAAchN,KAAKuN,iBACnBxK,KAAM/C,KAAK7B,MAAM4E,KACjB4J,QAAS3M,KAAK7B,MAAM2I,SACpB5F,KAAMlB,KAAKwN,oBACXT,SAAU/M,KAAKyN,0B,GAlHdpN,aA+HX6G,GAA2B,CAC7B,CACIhG,KAAM,SACN4F,SAAU,UAEd,CACI5F,KAAM,aACN4F,SAAU,aAEd,CACI5F,KAAM,OACN4F,SAAU,QAEd,CACI5F,KAAM,kBACN4F,SAAU,cAEd,CACI5F,KAAM,OACN4F,SAAU,WAKZC,GAA4B,CAC7B,CACG7F,KAAM,WACN4F,SAAU,QAEd,CACI5F,KAAM,OACN4F,SAAU,QAEb,CACG5F,KAAM,MACN4F,SAAU,OAEb,CACG5F,KAAM,UACN4F,SAAU,iBAEb,CACG5F,KAAM,sBACN4F,SAAU,SAEb,CACG5F,KAAM,eACN4F,SAAU,SAEb,CACG5F,KAAM,gBACN4F,SAAU,YAEb,CACG5F,KAAM,eACN4F,SAAU,YAEb,CACG5F,KAAM,KACN4F,SAAU,eAEb,CACG5F,KAAM,OACN4F,SAAU,kBAOPsG,MClHAO,G,2MA7EXC,0BAA4B,SAACnK,EAAOC,EAAM9B,GAiBtC,OAfA9C,QAAQC,IAAI6C,GAIiBA,EAAaoF,OAAO,SAACV,GAE9C,IAAMuH,EAAkB,IAAI/K,KAAKwD,EAAYvD,MAI7C,OAAQ8K,EAAgBlK,aAAeF,GAASoK,EAAgBjK,gBAAkBF,K,qHAOhF,IAAD,OAEL,OACI,0BAAM5D,UAAU,oBAIZ,kBAACkE,EAAD,KACK,SAAAG,GAAa,OACV,kBAAC,IAAMe,SAAP,KACI,kBAAC,GAAD,CACA7C,cAAe8B,EAAQ9B,cACvBC,aAAc6B,EAAQ7B,aACtB4J,mBAAoB/H,EAAQ5B,oBAC5B4J,kBAAmBhI,EAAQ3B,qBAG3B,kBAAC,IAAD,KAKI,kBAAC,IAAD,CAAOsL,OAAK,EAACC,KAAM,aAGfC,OAAQ,kBAAM,kBAAC,EAAD,CACMpM,aAAc,EAAKgM,0BAA0BzJ,EAAQ9B,cAAe8B,EAAQ7B,aAAc6B,EAAQvC,cAClGQ,cAAe+B,EAAQ/B,mBAK/C,kBAAC,IAAD,CAAO2L,KAAM,UACTC,OAAQ,kBAAM,kBAAC,EAAD,CACEpM,aAAc,EAAKgM,0BAA0BzJ,EAAQ9B,cAAe8B,EAAQ7B,aAAc6B,EAAQvC,mBAGtH,kBAAC,IAAD,CAAOmM,KAAO,UACVC,OAAQ,kBAAM,kBAAC,GAAD,CAAQ5L,cAAe+B,EAAQ/B,4B,GAlEpD/B,aCsFd4N,I,kNAvFX9P,MAAQ,CACJe,SAAU,GACV0C,aAAc,M,EAGlBwG,kBAAqB,a,EA8BrB8F,mBAAqB,WACjB,IAAI9K,EAAQF,eAAeG,QAAQ,OAEnC/D,MAAM,aAAc,CAChBC,OAAQ,MACRI,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2ByD,MAEhCxD,KAAK,SAAA0D,GACJ,OAAOA,EAASC,SACjB3D,KAAK,SAAA4D,GACJ1E,QAAQC,IAAIyE,GACZ,EAAK2K,YAAY3K,M,EAKzB2K,YAAc,SAACC,GACX,EAAKpP,MAAMiD,eAAemM,I,wEAQpB,IAAD,OAGL,OACI,kBAACpK,EAAD,KACK,SAAAG,GAAO,OACJ,yBAAKrE,UAAU,YAKX,kBAAC,EAAD,CAASZ,SAAUiF,EAAQjF,WAC3B,yBAAKY,UAAU,sBACX,kBAAC,GAAD,CAAgBuO,QAAS,EAAKrP,MAAMqP,QAASzM,aAAY,YAAMuC,EAAQvC,wB,GA7EpEvB,cCAzBiO,I,kNAEFnQ,MAAQ,CAEJoQ,OAAO,EACPC,UAAU,EACVpL,MAAO,M,EAGX3C,iBAAmB,SAACpB,GAEhB,OADAP,QAAQC,IAAIM,GACLC,MAAM,YAAc,CACvBC,OAAQ,OACRC,KAAMC,KAAKC,UAAUL,GACrBM,QAAS,CACP,OAAU,mBACV,eAAgB,sBAEjBC,KAAK,SAAAC,GAAG,OAAIf,QAAQC,IAAIc,M,EAKjCZ,gBAAkB,SAACI,GAEf,OAAOC,MAAM,SAAU,CACnBC,OAAQ,OACRC,KAAMC,KAAKC,UAAUL,GACrBM,QAAS,CACL,OAAU,mBACV,eAAgB,sBAErBC,KAAK,SAAAC,GACc,MAAfA,EAAIoF,OAGHpF,EAAI0D,OAAO3D,KAAM,SAAAC,GACb,EAAK4O,oBAAoB5O,GACzB,EAAKb,MAAM+B,iBAIfjC,QAAQC,IAAI,0B,EAMxB0P,oBAAsB,SAAC5O,GAGnBqD,eAAewL,QAAQ,MAAO7O,EAAIuD,OAElC,EAAKpE,MAAMkD,OAAOrC,EAAIuD,Q,EAM1BhE,iBAAmB,WAEf,IAAIgE,EAAQF,eAAeG,QAAQ,OAGnC/D,MAAM,cAAe,CACjBC,OAAQ,MACRI,QAAU,CACN,eAAgB,mBAChB,cAAgB,UAAhB,OAA2ByD,MAEhCxD,KAAK,SAAAC,GACc,MAAfA,EAAIoF,SACH,EAAKjG,MAAMkD,OAAOkB,GAClB,EAAKpE,MAAM+B,mB,EAMvB4N,0BAA4B,WACxB,EAAKjQ,SAAS,CAAC6P,OAAO,K,mFAKtBvO,KAAKZ,qB,+BAIA,IAAD,OAMJ,OAJAN,QAAQC,IAAIiB,KAAKhB,OAIdgB,KAAKhB,MAAM+C,cAEN,yBAAKjC,UAAU,OACX,kBAACkE,EAAD,KACK,SAAAG,GAAO,OACJ,kBAAC,GAAD,CAAkBkK,QAAQ,aAAapM,eAAgBkC,EAAQlC,oBAQxEjC,KAAK7B,MAAMoQ,MAEd,yBAAKzO,UAAU,OACX,kBAACkE,EAAD,KAGQ,SAAAG,GAAO,OAEP,kBAAC,EAAD,CAEA1D,iBAAkB,EAAKA,iBACvBxB,gBAAiB,EAAKA,gBACtB8B,aAAcoD,EAAQpD,kBAYlC,yBAAKjB,UAAU,OACX,kBAAC,GAAD,CAAS8O,sBAAuB5O,KAAK2O,iC,GArIjCtO,cA8IlBwO,GAAU,SAAC7P,GAEb,OACI,yBAAKc,UAAU,qBACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,kBACX,uBAAGA,UAAU,wBAAb,mBAIJ,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,8BAA8BK,QAASnB,EAAM4P,uBACxD,iDAEJ,yBAAK9O,UAAU,4BACX,yCAQTwO,M,MCnKfQ,EAAQC,IAAIC,IAAYC,IAAQC,IAAOC,IAAWC,IAAqBC,IAAeC,IAAgBC,IAAeC,IAAMC,IAAQC,IAAUtO,IAAauO,IAAQC,IAAQC,IAAiBC,IAAQC,IAAYC,IAAYC,KAyB5MC,OAvBf,WACE,OACI,6BACE,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAClM,EAAD,KACG,SAAAG,GAAO,OACN,kBAAC,GAAD,CACMjC,OAAQiC,EAAQjC,OAChBnB,aAAcoD,EAAQpD,aACtBgB,cAAeoC,EAAQpC,sBCTzBoO,QACW,cAA7BnK,OAAOoK,SAASC,UAEe,UAA7BrK,OAAOoK,SAASC,UAEhBrK,OAAOoK,SAASC,SAASC,MACvB,2DCZNC,IAASvC,OAAO,kBAAC,GAAD,MAASwC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhR,KAAK,SAAAiR,GACjCA,EAAaC,gB,mBEnInBC,EAAOC,QAAU,IAA0B,2C,wCCA3CD,EAAOC,QAAU,IAA0B,uC","file":"static/js/main.fde7f047.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './toggleableForm.css';\n\nclass SignIn extends Component {\n\n    state = {\n        Username: '',\n        Password: '',\n    }\n\n    onFieldChange = (e) => {\n        \n        \n        if(e.target.placeholder === 'Username'){\n            this.setState({Username: e.target.value})\n        } else  {\n            this.setState({Password: e.target.value})\n        } \n\n        \n    };\n\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n\n        console.log(this.state);\n        \n        this.props.handleLogInForm({username: this.state.Username, password: this.state.Password});\n\n    }\n    \n    // unused\n    authenticateUser = (credentials) => {\n        return fetch('/login', {\n            method: 'post',\n            body: JSON.stringify(credentials),\n            headers: {\n                'Accept': 'application/json',\n                'content-type': 'application/json',\n            },\n        }).then(res => console.log(res));\n    }\n\n    render() {\n        return (\n            <div className='form-container'>\n                <div className='form-container-header'>\n                    <p>Log In</p>\n                </div>\n                \n                <form className='form-container-form'>\n                    <input onChange={this.onFieldChange} className='form-container-form-text'type='username' placeholder='Username' required />\n                    <input onChange={this.onFieldChange} className='form-container-form-text' type='password' placeholder='Password' required />\n                    \n                    <input onClick={this.handleFormSubmit} className='form-container-form-button' type='submit' value='LOG IN' />\n                </form>\n                <div className='form-container-toggle'>\n                    <p>Dont have an account?</p>\n                    <p className='link' onClick={this.props.onFormToggle}>Sign Up!</p>\n                </div>\n                \n            </div>\n        );\n    }\n}\n\nexport default SignIn;","import React, { Component } from 'react';\n\nclass SignUp extends Component {\n\n\n    state = {\n        Username: \"\",\n        Password: \"\",\n        Confirm: \"\",\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        // this.registerUser({username: this.state.Username, password: this.state.Password});\n\n        this.props.handleSignUpForm({username: this.state.Username, password: this.state.Password});\n        \n    }\n\n    registerUser = (data) => {\n        return fetch('/register',  {\n            method: 'post',\n            body: JSON.stringify(data),\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n            },\n          }).then(res => console.log(res));\n    }\n\n    onFieldChange = (e) => {\n        // console.log(e.target.value);\n        console.log(e.target.placeholder);\n        if(e.target.placeholder === 'Username'){\n            this.setState({Username: e.target.value})\n        } else if(e.target.placeholder === 'Password') {\n            this.setState({Password: e.target.value})\n        } else {\n            this.setState({Confirm: e.target.value})\n        }\n\n        \n    };\n\n    render() {\n\n        console.log(this.props)\n        return (\n            <div className='form-container'>\n                <div className='form-container-header'>\n                    <p>Sign Up</p>\n                </div>\n                \n                <form className='form-container-form'>\n                    <input onChange={this.onFieldChange} className='form-container-form-text'type='username' placeholder='Username' required />\n                    <input onChange={this.onFieldChange} className='form-container-form-text' type='password' placeholder='Password' required />\n                    <input onChange={this.onFieldChange} className='form-container-form-text' type='password' placeholder='Confirm Password' required />\n                    <input onClick={this.handleSubmit} className='form-container-form-button' type='submit' value='SIGN UP' />\n                </form>\n                <div className='form-container-toggle'>\n                    <p>Already have an account?</p>\n                    <p className='link' onClick={this.props.onFormToggle}>Sign in!</p>\n                </div>\n                \n            </div>\n        );\n    }\n}\n\nexport default SignUp;","import React, { Component } from 'react';\nimport SignIn from './SignIn';\nimport SignUp from './SignUp';\nimport './toggleableForm.css';\n\nclass ToggleableForm extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            signIn: true,\n        }\n    };\n\n    handleFormToggle = (e) => {\n        this.setState({signIn: !this.state.signIn});\n    }\n\n    \n\n    render() {\n\n        console.log(this.props);\n\n        if (this.state.signIn){\n            return(\n                <div className='toggleable-form'>\n                    <SignIn onFormToggle={this.handleFormToggle} handleLogInForm={this.props.handleLogInForm} logInSuccess={this.props.logInSuccess}/>\n                </div>\n            )\n        } else {\n            return (\n                <div className='toggleable-form'>\n                    <SignUp onFormToggle={this.handleFormToggle} handleSignUpForm={this.props.handleSignUpForm}/>\n                </div>\n            )\n        }\n        \n        \n    }\n}\n\nexport default ToggleableForm;","import React, { Component } from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faColumns, faSignOutAlt} from '@fortawesome/free-solid-svg-icons';\nimport {faChartLine} from '@fortawesome/free-solid-svg-icons';\nimport {faBell} from '@fortawesome/free-solid-svg-icons';\nimport {faCogs} from '@fortawesome/free-solid-svg-icons';\nimport {faBars} from '@fortawesome/free-solid-svg-icons';\nimport {Link} from 'react-router-dom';\n\nclass SidebarNavigation extends Component {\n    render() {\n        return (\n            <div className = 'sidebar-nav-links-scrollable'>\n                <Link to='/dashboard'>\n                    <div className='sidebar-nav-links-scrollable-link'>\n                        <div>\n                            <FontAwesomeIcon icon={faColumns} />\n                        </div>\n                        <div>\n                            Dashboard\n                        </div>\n                    </div>\n                </Link>\n                <Link to='/charts'>\n                    <div className='sidebar-nav-links-scrollable-link'>\n                        <div>\n                            <FontAwesomeIcon icon={faChartLine} />\n                        </div>\n                        <div>\n                            Charts\n                        </div>\n                    </div>\n                </Link>\n                <div className='sidebar-nav-links-scrollable-link'>\n                    <div>\n                        <FontAwesomeIcon icon={faBars} />\n                    </div>\n                    <div>\n                        Categories\n                    </div>\n                </div>\n                <div className='sidebar-nav-links-scrollable-link'>\n                    <div>\n                        <FontAwesomeIcon icon = {faBell}/>\n                    </div>\n                    <div>\n                        Notifications\n                    </div>\n                </div>\n                <div className='sidebar-nav-links-scrollable-link'>\n                    <div>\n                        <FontAwesomeIcon icon = {faCogs}/>\n                    </div>\n                    <div>\n                        Settings\n                    </div>\n                </div>\n                <div className='sidebar-nav-links-scrollable-link' onClick={this.props.signOut}>\n                    <div>\n                        <FontAwesomeIcon icon = {faSignOutAlt}/>\n                    </div>\n                    <div>\n                        Logout\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SidebarNavigation;","import React, {createContext} from 'react';\n\n\nconst UserContext = createContext({\n    username: '',\n    transactions: [],\n    _id: '',\n    imageHex: '',\n    authenticated: false,\n    jwt: '',\n    updateUserData: () => {},\n    logInSuccess: () => {},\n    signOut: () => {},\n    setJwt: () => {},\n    getUserData: () => {},\n    requestUpdate: () => {},\n    selectedMonth: '',\n    selectedYear: '',\n    updateSelectedMonth: () => {},\n    updateSelectedYear: () => {},\n});\n\nexport class UserProvider extends React.Component {\n\n    \n    // Change this to be a fetch call, so it can be called when a refresh is required when data is changed on the server, \n    // and when the user successfully logs in\n    updateUserData = newUserData => {\n        console.log(newUserData);\n        newUserData.transactions.sort((a, b) => {\n            return new Date(b.date) - new Date(a.date);\n        })\n        console.log(newUserData.transactions);\n        this.setState({username: newUserData.username, transactions: newUserData.transactions, _id: newUserData._id, imageHex: newUserData.settings.img.data.data})\n    };\n    // When this is called, call the function to fetch user data.\n    logInSuccess = () => {\n        console.log('in context loginsuccess')\n        this.setState({authenticated: true});\n        this.getUserData()\n        \n    };\n\n    setJwt = jwt => {\n        console.log('in context setjwt')\n        this.setState({jwt: jwt});\n    };\n\n    signOut = () => {\n        this.setState({authenticated: false});\n        sessionStorage.removeItem('jwt');\n    };\n\n    getUserData = () => {\n        let token = sessionStorage.getItem('jwt');\n\n        fetch('/dashboard', {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'Authorization': `Bearer ${token}`,\n            }\n        }).then(response => {\n            return response.json();\n        }).then(parsedJson => {\n            console.log(parsedJson);\n            this.updateUserData(parsedJson);\n            // this.setTransactionData(parsedJson.transactions);\n        })\n    };\n\n    requestUpdate = () => {\n        console.log('update requested');\n        this.getUserData();\n    }\n\n    updateSelectedMonth = (month) => {\n        console.log('in updateSelectedMonth, month: ' + this.state.selectedMonth)\n        this.setState({selectedMonth: month});\n    };\n\n    updateSelectedYear = (year) => {\n        console.log('in updateSelected year, year: ' + this.state.selectedYear)\n        this.setState({selectedYear: year});\n    };\n\n    state = {\n        username: '',\n        transactions: [],\n        _id: '',\n        imageHex: null,\n        selectedMonth: new Date().getMonth(),\n        selectedYear: new Date().getFullYear(),\n        updateUserData: this.updateUserData,\n        logInSuccess: this.logInSuccess,\n        setJwt: this.setJwt,\n        signOut: this.signOut,\n        getUserData: this.getUserData,\n        requestUpdate: this.requestUpdate,\n        updateSelectedMonth: this.updateSelectedMonth,\n        updateSelectedYear: this.updateSelectedYear,\n    };\n\n    \n\n    render(){\n        return(\n            <UserContext.Provider value={this.state}>\n                {this.props.children}\n            </UserContext.Provider>\n        )\n    };\n};\n\nexport const UserConsumer = UserContext.Consumer;","import React, { Component } from 'react';\nimport './sidebar.css'\nimport ThumbnailPicture from '../../../img/default-icon.jpeg';\nimport NoImage from '../../../img/no-image.jpeg'\nimport SidebarNavigation from './SidebarNavigation';\nimport {UserConsumer} from '../../../user-context';\n\n\nclass sidebar extends Component {\n    render() {\n        // Set up react router, i think every link should be included in a <Link /> which references one of the different options to display\n        // in the content display\n        return (\n            <div className='sidebar-nav'  >\n                <div className='sidebar-nav-head'>\n                    {/* <div className='sidebar-nav-header-icon'>\n                        <img src={ThumbnailPicture} alt='user-icon'/>\n                    </div> */}\n                    <UserConsumer>\n                        {\n                            context => (\n                                <SidebarUserPhoto requestUpdate={context.requestUpdate} imageHex={context.imageHex}/>\n                            )\n                        }\n                    </UserConsumer>\n                    \n                    <div className='sidebar-nav-header-username'>\n                        <p>{this.props.username}</p>\n                    </div>\n                    <div className='sidebar-nav-header-settings'>\n                        <i className='fas fa-camera'></i>\n                    </div>\n                </div>\n                <div className='sidebar-nav-links'>\n                    <UserConsumer>\n                        {\n                            context => (\n                                <SidebarNavigation signOut={context.signOut} />\n                            )\n                        }\n                    </UserConsumer>\n                    \n                </div>\n\n                \n            </div>\n        );\n    }\n};\n\n\n\nclass SidebarUserPhoto extends Component {\n\n    state = {\n        upload: false,\n        fileURL: null,\n        file: null,\n    };\n\n    toggleOpenForm = () => {\n        console.log('open the fucking modal')\n        this.setState({upload: !this.state.upload});\n    };\n\n    handleFileChange = (e) => {\n        this.setState({\n            fileURL: URL.createObjectURL(e.target.files[0]),\n            file: e.target.files[0],\n        })\n        \n    };\n\n    onFileSubmit = async (e) => {\n\n        e.preventDefault();\n\n        const token = sessionStorage.getItem('jwt');\n        console.log(this.state.file);\n\n        const formData = new FormData();\n\n        formData.append('profile-image', this.state.file);\n        \n        // send to the server,\n        const res = await fetch('/user/photo', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                \n                'Authorization': `Bearer ${token}`,\n            },\n            body: formData,\n\n        });\n\n        if(res.status === 200){\n            // close modal\n            this.setState({upload: !this.state.upload});\n            // request context to update.\n            this.props.requestUpdate();\n\n\n        }\n\n        console.log(res);\n\n        // when the server responds that it works,\n        // retrieve user data from the server, so that the image update is displayed.\n\n        // close the modal.\n    }\n\n    render(){\n        if(this.state.upload){\n            return (\n                <React.Fragment>\n                    <div className='sidebar-nav-header-icon' onClick={this.toggleOpenForm}>\n                        <img src={this.props.imageHex != null ? arrayBufferToBase64(this.props.imageHex): {ThumbnailPicture}} alt='user-icon' onClick={this.toggleOpenForm}/>\n                    </div>\n                    <div className='modal-photo-upload'>\n                        <div className='modal-photo-upload-content'>\n                            <div className='modal-photo-upload-close'>\n                                <button className='close' onClick={this.toggleOpenForm}>X</button>\n                            </div>\n                            <div className='modal-photo-upload-form-container'>\n                                <form className='modal-photo-upload-form'>\n                                    <div className='modal-photo-upload-preview'>\n                                        <img src={this.state.fileURL ? this.state.fileURL : NoImage} alt='upload preview'/>\n                                    </div>\n                                    <input type='file' onChange={this.handleFileChange}>\n                                    </input>\n                                    <input type='submit' value='Upload' className='btn btn-primary btn-lg' onClick={this.onFileSubmit}/>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </React.Fragment>\n                \n                \n            )\n        } else {\n            return (\n                <div className='sidebar-nav-header-icon' onClick={this.toggleOpenForm}>\n                    <img src={this.props.imageHex != null ? arrayBufferToBase64(this.props.imageHex): {ThumbnailPicture}} alt='user-icon' onClick={this.toggleOpenForm}/>\n                </div>\n            )\n        }\n        \n    }\n};\n\nconst arrayBufferToBase64 = (buffer) => {\n    const base64flag =  'data:image/jpeg;base64,';\n    var binary = '';\n    var bytes = [].slice.call(new Uint8Array(buffer));\n    bytes.forEach((b) => binary += String.fromCharCode(b));\n    return base64flag + window.btoa(binary);\n};\n\nexport default sidebar;","import React, { Component } from 'react';\nimport './Summary.css'\n\nclass Summary extends Component {\n\n    setTotalIncomeAndExpense = (transactions) => {\n        let totalExpense = 0; \n        let totalIncome = 0;\n\n\n        if(transactions){\n        this.props.transactions.forEach(transaction => {\n            if(transaction.type === 'income'){\n                totalIncome += transaction.amount;\n            } else {\n                totalExpense += transaction.amount;\n            }\n        });} \n\n        console.log(totalExpense + \" \" + totalIncome);\n\n        return {totalIncome: totalIncome, totalExpense: totalExpense}\n\n        \n    }\n\n    render() {\n\n        const totalIncomeAndExpense = this.setTotalIncomeAndExpense(this.props.transactions)\n\n        console.log(this.props);\n        return (\n            <div className='summary'>\n                <div className='summary-container'>\n                    <div className=\"summary-container-totals\">\n                        <div >\n                            <p className='summary-container-totals-word'>Income</p>\n                            <p className='summary-container-totals-number'>{totalIncomeAndExpense.totalIncome}</p>\n                        </div>\n                        \n                    </div>\n                    <div className=\"summary-container-totals\">\n                        <div>\n                            <p className='summary-container-totals-word'>Expenses</p>\n                            <p className='summary-container-totals-number'>{totalIncomeAndExpense.totalExpense}</p>\n                        </div>\n                        \n                    </div>\n                    <div className=\"summary-container-totals\">\n                        <div>\n                            <p className='summary-container-totals-word'>Balance</p>\n                            <p className='summary-container-totals-number'>{totalIncomeAndExpense.totalIncome - totalIncomeAndExpense.totalExpense}</p>\n                        </div>                        \n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Summary;","import React, { Component } from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faPlus} from '@fortawesome/free-solid-svg-icons';\nimport './Dashboard.css';\n\n\nconst CreateButton = () => {\n\n\n\n    return (\n        <div className='create-icon'>\n            <FontAwesomeIcon icon={faPlus} />\n            \n        </div>\n    )\n}\n\n\nexport default CreateButton;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\n\nclass EditableTransaction extends Component {\n\n    state = {\n        open: false,\n    }\n\n    getTransactionIcon = (type, category) => {\n\n        if (type === 'expense'){\n        const cat = expenseCategoriesAndIcons.filter((expense) => {\n            \n            return expense.category === category;\n        })\n        \n        return cat[0].icon;\n        } else {\n            const cat = incomeCategoriesAndIcons.filter((income) => {\n                return income.category === category;\n            })\n            \n            return cat[0].icon;\n        }\n\n    };\n\n    toggleExpand = () => {\n        this.setState({open: !this.state.open});\n    }\n\n    handleDeleteTransaction = () => {\n        this.props.onDeleteTransaction(this.props.id);\n    }\n\n    render() {\n\n        const iconStyle = {\n            color: this.props.type === 'expense' ? '#eb5960' : '#6ee05a'\n        };\n\n        \n\n        const date = new Date(this.props.date).toUTCString().split(\" \").slice(0, 3).join(\" \");\n\n        if(this.state.open){\n            return(\n                <div className='dashboard-scrollable-item open' onClick={this.toggleExpand}>\n                    <div className='dashboard-scrollable-item-topbar'>\n                        <div className='dashboard-scrollable-item-date'>\n                            <p >{date}</p>\n                        </div>\n                        <div className='dashboard-scrollable-item-type'>\n                            <p>{this.props.type}: {this.props.amount}</p>\n                        </div>\n                    </div>\n                    <div className='dashboard-scrollable-item-bottom'>\n                        <div className='dashboard-scrollable-item-bottom-icon' style={iconStyle}>\n\n                            <FontAwesomeIcon icon={`${this.getTransactionIcon(this.props.type, this.props.category)}`}/> \n\n\n                        </div>\n                        <div className='dashboard-scrollable-item-bottom-category'>\n                            <p>{this.props.category}: {this.props.description}</p>\n                        </div>\n                        <div className='dashboard-scrollable-item-bottom-amount'>\n                            <p>\n                                {this.props.type === 'expense' ? `-${this.props.amount}` : this.props.amount}\n                            </p>\n                        </div>\n\n                    </div>\n                    <div className='dashboard-scrollable-item-open'>\n                        <div className='dashboard-scrollable-item-open-edit'>\n                            <FontAwesomeIcon icon={'edit'} />\n                        </div>\n                        <div className='dashboard-scrollable-item-open-delete' onClick={this.handleDeleteTransaction}>\n                            <FontAwesomeIcon icon={'trash-alt'} />\n                        </div>\n                    </div> \n                </div>\n            )\n        } else {\n        return (\n            <div className='dashboard-scrollable-item' onClick={this.toggleExpand}>\n                <div className='dashboard-scrollable-item-topbar'>\n                    <div className='dashboard-scrollable-item-date'>\n                        <p >{date}</p>\n                    </div>\n                    <div className='dashboard-scrollable-item-type'>\n                        <p>{this.props.type}: {this.props.amount}</p>\n                    </div>\n                </div>\n                <div className='dashboard-scrollable-item-bottom'>\n                    <div className='dashboard-scrollable-item-bottom-icon' style={iconStyle}>\n                        \n                        <FontAwesomeIcon icon={`${this.getTransactionIcon(this.props.type, this.props.category)}`}/> \n                        \n                        \n                    </div>\n                    <div className='dashboard-scrollable-item-bottom-category'>\n                        <p>{this.props.category}: {this.props.description}</p>\n                    </div>\n                    <div className='dashboard-scrollable-item-bottom-amount'>\n                        <p>\n                            {this.props.type === 'expense' ? `-${this.props.amount}` : this.props.amount}\n                        </p>\n                    </div>\n                    \n                </div>       \n                {/* {this.props.key}\n                {this.props.category}\n                {this.props.amount}                \n                {this.props.description}\n                {this.props.type} */}\n            </div>\n        )};\n    }\n};\n\nEditableTransaction.propTypes = {\n    \n    id: PropTypes.string,\n    category: PropTypes.string,\n    amount: PropTypes.number,\n    date: PropTypes.string,\n    description: PropTypes.string,\n    type: PropTypes.string,\n};\n\nconst expenseCategoriesAndIcons = [\n    {\n       icon: 'utensils',\n       category: 'food',\n   },\n   {\n       icon: 'home',\n       category: 'rent'\n   },\n    {\n       icon: 'car',\n       category: 'car',\n   },\n    {\n       icon: 'gamepad',\n       category: 'entertainment'\n   },\n    {\n       icon: 'file-invoice-dollar',\n       category: 'bills',\n   },\n    {\n       icon: 'phone-square',\n       category: 'phone',\n   },\n    {\n       icon: 'network-wired',\n       category: 'internet',\n   },\n    {\n       icon: 'glass-cheers',\n       category: 'kick-ons',\n   }, \n    {\n       icon: 'tv',\n       category: 'electronics',\n   },\n    {\n       icon: 'star',\n       category: 'subscriptions'\n    }\n   ];\n\n   const incomeCategoriesAndIcons = [\n    {\n        icon: 'wallet',\n        category: 'salary',\n    }, \n    {\n        icon: 'chart-line',\n        category: 'dividends',\n    },\n    {\n        icon: 'gift',\n        category: 'gift'\n    },\n    {\n        icon: 'money-check-alt',\n        category: 'investment'\n    },\n    {\n        icon: 'undo',\n        category: 'refund',\n    }\n    ];\n\n\nexport default EditableTransaction;","import React, { Component } from 'react';\nimport Summary from './Summary/Summary';\nimport CreateButton from './CreateButton';\nimport {Link} from 'react-router-dom';\nimport EditableTransaction from './EditableTransaction';\n\nclass Dashboard extends Component {\n\n    // This component WILL only receive props that are for the current month\n\n\n        state = {\n            totalIncome: '',\n            totalExpenses: '',\n\n        }\n\n        \n    \n\n    setTotalIncomeAndExpense = () => {\n        let totalExpense = 0; \n        let totalIncome = 0;\n\n\n        if(this.props.transactions){\n        this.props.transactions.forEach(transaction => {\n            if(transaction.type === 'income'){\n                totalIncome += transaction.amount;\n            } else {\n                totalExpense += transaction.amount;\n            }\n        });} \n\n        console.log(totalExpense + \" \" + totalIncome);\n\n        this.setState({totalIncome: totalIncome, totalExpenses: totalExpense});\n    }\n\n    handleDeleteTransactions = async (transactionId) => {\n\n        console.log(JSON.stringify({transaction_id: transactionId}))\n        let token = sessionStorage.getItem('jwt');\n\n        let response = await fetch('/transactions/delete', {\n            method: 'DELETE',\n            body: JSON.stringify({transaction_id: transactionId}),\n            headers: {\n                'content-type': 'application/json',\n                'Authorization': `Bearer ${token}`,\n            }});\n\n            console.log(response);\n\n            \n\n            if(response.status === 200){\n                this.props.requestUpdate();\n            }\n\n            \n\n\n        console.log('Delete transaction with Id of: ' +transactionId);\n    }\n\n    \n\n    componentDidMount = () => {\n        // this.setTotalIncomeAndExpense();\n    }\n\n    componentWillReceiveProps = () => {\n        // this.setTotalIncomeAndExpense();\n    }\n\n    render() {\n\n        let transactions = null;\n\n        // this.setTotalIncomeAndExpense()\n\n        if(this.props.transactions){\n            transactions = this.props.transactions.map((transaction) => (\n                <EditableTransaction \n\n                    key={transaction._id}\n                    id={transaction._id} \n                    type={transaction.type} \n                    category={transaction.category}\n                    date={transaction.date}\n                    amount={transaction.amount}\n                    description={transaction.description}\n                    onDeleteTransaction={this.handleDeleteTransactions}\n                    // add a function that is called when the delete button is clicked.\n                    \n                />\n            ))\n        }\n\n        console.log(`In Dashboard, transactions : ${this.props.transactions}`)\n        return (\n            <div className='dashboard-container'>\n                {/* Summary */}\n                <Summary transactions={this.props.transactions}/>\n                <div className='dashboard-scrollable-container'>\n                    {transactions}\n                    {/* List of this months expenditures, which allows you when clicking on them to edit them */}\n                </div>\n                \n                {/* Bottom right, a create icon to add income or expense */}\n                <Link to='/create'>\n                    <CreateButton />\n                </Link>\n                \n            </div>\n        );\n    }\n};\n\n\n\n\n\n\nexport default Dashboard;","import React, { Component } from 'react';\nimport {RadialChart} from 'react-vis';\nimport './charts.css';\n\n\n// the dash for charts, allows you to make a choice of what category you want to see,\n// date to be displayed is chosen in the Calender component. \n\n\n\nclass Charts extends Component {\n\n    state = {\n        category: null,\n    }\n\n    handleCategorySelect = (e) => {\n        console.log(e.target.innerText);\n        this.setState({category: e.target.innerText})\n    };\n\n    // works\n    getChartTransactions = () => {\n\n        if(!this.state.category){\n            return this.props.transactions;\n        }\n\n        const type = this.state.category.toLowerCase();\n        \n        const transactions = this.props.transactions.filter(transaction => {\n            \n            return (transaction.type === type )\n        });\n\n        return transactions;\n    }\n\n    // Some function, that from transactions, returns an object\n\n    render() {\n\n        if(this.state.category){\n            this.getChartTransactions()\n        \n        \n        return (\n            <div className='charts-container'>\n                {/* category selector, options: income, expense, both */}\n                <CategorySelector onCategorySelect={this.handleCategorySelect}/>\n                <ChartRenderer category={this.state.category} transactions={this.getChartTransactions()}/>\n\n            </div>\n        );} else {\n            return (\n                <div className='charts-container'>\n                {/* category selector, options: income, expense, both */}\n                <CategorySelector onCategorySelect={this.handleCategorySelect}/>\n                {/* <ChartRenderer category={this.state.category}/> */}\n\n                </div>\n            )\n        }\n    }\n};\n\nconst CategorySelector = (props) => {\n\n    return (\n        <div className='charts-categories'>\n            <div className='charts-categories-item'>\n                <p onClick={props.onCategorySelect}>Income</p>\n            </div>\n            <div className='charts-categories-item'>\n                <p onClick={props.onCategorySelect}>Expense</p>\n            </div>\n            <div className='charts-categories-item'>\n                <p onClick={props.onCategorySelect}>Both</p>\n            </div>\n\n        </div>\n    )\n};\n\nconst ChartRenderer = (props) => {\n\n    const createChartData = () => {\n        let data = [];\n        let sum = 0;\n        let found;\n\n        props.transactions.forEach((transaction) => {\n\n            found = false;\n\n            for(let i =0; i< data.length; i++){\n                if(data[i].category === transaction.category){\n                    data[i].amount += transaction.amount\n                    sum += transaction.amount;\n                    found = true;\n                    break;\n                }\n            };\n            if (!found){\n                data.push({category: transaction.category, amount: transaction.amount});\n                sum += transaction.amount;\n            }\n        })\n        data.forEach(data => console.log(data));\n        console.log(data + '' + sum);\n\n        data = data.map(category => {\n            return (\n                {angle: category.amount/sum,  label: category.category, color: createRandomHexColour()}\n            )\n        });\n        return {data: data, sum: sum}\n    };\n\n    const createRandomHexColour = () => {\n        const literals = ['0', '1', '2', '3', '4', '5', '6', '7', '8','9','A','B','C','D','E','F'];\n\n        let hexColor = ['#'];\n\n        for(let i =0; i< 6; i++){\n            hexColor.push(literals[getRandomInt(0, 16)])\n        };\n\n        return hexColor.join('');\n\n    };\n\n    const getRandomInt = (min, max) => {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n\n        return Math.floor(Math.random() * (max-min) + min);\n    }\n\n    createChartData();\n\n    // angle is the % of the chart.\n    if(props.category){\n        \n        let myData = createChartData();\n\n        console.log(myData.data)\n\n        const chartInformation = myData.data.map(chartItem => (\n             <ChartInformationItem color={chartItem.color} label={chartItem.label} percent={Math.round(chartItem.angle * 100 * 10)/10}/>\n        ));\n        return(\n            <div className='charts-display-container'>\n                <div className='charts-display-header'>\n                    <p>Monthly {props.category} Summary</p>\n                    <p>Total {props.category}: ${myData.sum}</p>\n                </div>\n                <div className='charts-display-information'>\n                    {chartInformation}\n                </div>\n                <RadialChart\n                    data={myData.data}\n                    width={300}\n                    height={300}\n                    showLabels={true}\n                    colorType={'literal'}\n                    animation\n\n                />\n            </div>\n        )\n    } else {\n        return (\n            null\n        )\n    }\n};\n\nconst capitalize = (str) => {\n    if (typeof str !== 'string') return '';\n\n    else return str.charAt(0).toUpperCase() + str.slice(1);\n};\n\nconst ChartInformationItem = (props) => {\n\n    let bgColor = {\n        backgroundColor: props.color,\n    }\n\n    return (\n        <div className='charts-display-information-item'>\n            <div className='charts-display-information-item-color' style={bgColor}>\n\n            </div>\n            <p>{capitalize(props.label)}, {props.percent}%</p>\n        </div>\n    )\n}\n\n\nexport default Charts;","import React from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\n\n\nconst CalenderToggler = (props) => {\n\n    return (\n        <div className='calender-toggler' onClick={props.openMonthSelector}>\n            <div className='calender-toggler-items'>\n                <div className='calender-toggler-date'>\n                    {props.month}. {props.year}\n                </div>\n                <div>\n                    <FontAwesomeIcon icon={props.open ? 'sort-up' : 'sort-down'}/>\n                </div>\n            </div>\n            \n        </div>\n    )\n};\n\nexport default CalenderToggler;","import React from 'react';\n\n\nclass MonthSelector extends React.Component  {\n\n    state = {\n        selectedYear: this.props.year,\n        \n    }\n\n    decrementYear = () => {\n        this.setState({selectedYear: this.state.selectedYear - 1})\n    }\n\n    incrementYear = () => {\n        this.setState({selectedYear: this.state.selectedYear + 1})\n    }\n\n    handleMonthSelect = (clickedMonth) => {\n        \n        this.props.onSelectMonthAndYear(clickedMonth, this.state.selectedYear)\n    }\n\n    render(){\n\n        const months = monthsArray.map(month => (\n            <Month month={month.month} monthName={month.monthName} onMonthSelect={this.handleMonthSelect}/>\n        ))\n    return (\n        <div className='calender-month-selector'>\n            <div className='calender-month-selector-months'>\n                <YearSelector \n                    year={this.state.selectedYear} \n                    incrementYear={this.incrementYear} \n                    decrementYear={this.decrementYear}\n                />\n                {months}\n            </div>\n            \n        </div>\n                    \n    )\n    }\n};\n\nconst Month = (props) => {\n\n\n    const handleMonthSelect = () => {\n        console.log(props);\n        props.onMonthSelect(props.month);\n    }\n    return (\n        <div onClick={handleMonthSelect}>\n            {props.monthName}\n        </div>\n    )\n};\n\nconst YearSelector = (props) => {\n\n    return (\n        <div className='calender-month-selector-year'>\n            <div onClick={props.decrementYear}>\n                {\"<\"}\n            </div>\n            <div>\n                {props.year}\n            </div>\n            <div onClick={props.incrementYear}>\n                {\">\"}\n            </div>\n        </div>\n    )\n};\n\nconst monthsArray = [\n    {\n        month: 0,\n        monthName: 'Jan'\n    },\n    {\n        month: 1,\n        monthName: 'Feb'\n    },\n    {\n        month:2,\n        monthName: 'Mar'\n    },\n    {\n        month: 3,\n        monthName: 'Apr'\n    },\n    {\n        month: 4,\n        monthName: 'May'\n    },\n    {\n        month: 5,\n        monthName: 'Jun'\n    },\n    {\n        month: 6,\n        monthName: 'Jul'\n    },\n    {\n        month: 7,\n        monthName: 'Aug'\n    },\n    {\n        month: 8,\n        monthName: 'Sep'\n    },\n    {\n        month: 9,\n        monthName: 'Oct'\n    },\n    {\n        month: 10,\n        monthName: 'Nov'\n    },\n    {\n        month: 11,\n        monthName: 'Dec'\n    },\n]\n\n\n\n\nexport default MonthSelector;","import React, { Component } from 'react';\nimport './Calender.css';\nimport Picker from 'react-month-picker'\nimport CalenderToggler from './CalenderToggler';\nimport MonthSelector from './MonthSelector'\n\nclass Calender extends Component {\n\n    state = {\n        selectedMonth: this.props.selectedMonth,\n        selectedYear: this.props.selectedYear,\n        open: false,\n    }\n\n    openMonthSelector = () => {\n        this.setState({open: !this.state.open});\n    }\n\n    handleSelectMonthAndYear = (month, year) => {\n        this.setState({open: !this.state.open})\n        this.props.updateContextMonth(month);\n        this.props.updateContextYear(year);\n    }\n    \n    render() {\n        \n        if (this.state.open){\n            return (\n                <React.Fragment>\n                    <div className=\"calender-container-open\">\n                        {/* calander-selected shows the currently selected month. year,\n                        clicking on it shows a year selected, followed by a selecter for any month of the selected year. */}\n                        <CalenderToggler \n                        openMonthSelector={this.openMonthSelector} \n                        open={this.state.open}\n                        month={months[this.props.selectedMonth]}\n                        year={this.props.selectedYear}\n                        />\n                        {/* <div className='calender-month-selector'>\n                            <div className='calender-month-selector-months'>\n                                <div className='calender-month-selector-year'>\n                                    <div>\n                                        {\"<\"}\n                                    </div>\n                                    <div>\n                                        {this.state.selectedYear - 1}\n                                    </div>\n                                    <div>\n                                        {\">\"}\n                                    </div>\n                                </div>\n                                <div>Jan</div>\n                                <div>Feb</div>\n                                <div>Mar</div>\n                                <div>Apr</div>\n                                <div>May</div>\n                                <div>Jun</div>\n                                <div>Jul</div>\n                                <div>Aug</div>\n                                <div>Sep</div>\n                                <div>Oct</div>\n                                <div>Nov</div>\n                                <div>Dec</div>\n\n                            </div>\n                            \n                        </div> */}\n                        <MonthSelector year={this.state.selectedYear} onSelectMonthAndYear={this.handleSelectMonthAndYear}/>\n\n                    </div>\n                    \n                </React.Fragment>\n                  \n            )\n        } else {\n        return (\n            <div className=\"calender-container\">\n                {/* calander-selected shows the currently selected month. year,\n                clicking on it shows a year selected, followed by a selecter for any month of the selected year. */}\n                <CalenderToggler \n                openMonthSelector={this.openMonthSelector} \n                open={this.state.open}\n                month={months[this.props.selectedMonth]}\n                year={this.props.selectedYear}\n                />\n            </div>  \n        );}\n    }\n};\n\nconst months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nexport default Calender;","import React, { Component } from 'react';\nimport './create.css';\n\nclass IncomeExpenseToggle extends Component {\n\n\n    render() {\n        return (\n            <div className='create-toggle-container'>\n                <div className={`create-toggle-container-expense ${this.props.activeType === 'expense' ? 'toggle-active' : ''}`}\n                    onClick={this.props.activeType === 'income' ? this.props.onToggle : null}\n                >\n                    <p>Expense</p>\n                </div>\n                <div className={`create-toggle-container-income ${this.props.activeType === 'income' ? 'toggle-active' : ''}`}\n                    onClick={this.props.activeType === 'expense' ? this.props.onToggle : null}\n                >\n                    <p>Income</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default IncomeExpenseToggle;","import React, { Component } from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\n\nconst Icon = (props) => {\n\n    const handleCategorySelect = () => {\n\n        props.onCategorySelect(props.category);\n    }\n\n    \n\n    \n    \n        return (\n            <div className='create-submit-icon' onClick={handleCategorySelect}>\n                <FontAwesomeIcon icon={`${props.icon}`}/>\n                <p>{props.category}</p>\n            </div>\n        );\n    \n}\n\nexport default Icon;","import React from 'react';\n\nimport Icon from './Icon';\n\nconst CategoryIcons = (props) => {\n\n    console.log(props.icons);\n    \n    const icons = props.icons.map(icon => (\n        <Icon icon={icon.icon} category={icon.category} onCategorySelect={props.onCategorySelect}/>\n    ))\n\n    \n        \n        return (\n            <div className='create-submit-icon-container'>\n                {/* <div className='create-submit-icon' >\n                    <FontAwesomeIcon icon={faUtensils} onClick={props.onCategorySelect}/>\n                </div>\n                <div className='create-submit-icon'>\n                    <FontAwesomeIcon icon={faHome}/>\n                </div>\n                <div className='create-submit-icon'>\n                    <FontAwesomeIcon icon={faCar} />    \n                </div>\n                <div className='create-submit-icon'>\n                    <FontAwesomeIcon icon={faGamepad}/>\n                </div>\n                <div className='create-submit-icon'>\n                    <FontAwesomeIcon icon={faFileInvoiceDollar} />\n                </div>\n                <div className='create-submit-icon'>\n                    <FontAwesomeIcon icon={faPhoneSquare}/>\n                </div>\n                <div className='create-submit-icon'>\n                    <FontAwesomeIcon icon={faNetworkWired}/>\n                </div>\n                <div className='create-submit-icon'>\n                    <FontAwesomeIcon icon={faGlassCheers}/>\n                </div>\n                <div className='create-submit-icon'>\n                    <FontAwesomeIcon icon={faTv}/>\n                </div>\n                <div className='create-submit-icon'>\n                    <FontAwesomeIcon icon={faStar}/>\n                </div>\n                 */}\n                 {icons}\n            </div>\n        )\n    \n};\n\n\n\nexport default CategoryIcons;\n\n","import React, { Component } from 'react';\nimport CategoryIcons from './CategoryIcons';\n\nclass IconSubmitForm extends Component {\n    render() {\n        return (\n            <div className='create-submit-container'>\n                <CategoryIcons display={this.props.type || null} onCategorySelect={this.props.onCategorySelect} icons={this.props.icons}/>\n                \n            </div>\n        );\n    }\n}\n\nexport default IconSubmitForm;","import React, { Component } from 'react';\nimport Calendar from 'react-calendar';\nimport Icon from './Icon';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\n\nclass SubmitForm extends Component {\n\n    state = {\n        amount: '',\n        description: '',\n    }\n\n    onAmountChange = (e) => {\n        console.log(e.target.value)\n\n        this.setState({amount: e.target.value});\n    }\n\n    onDescriptionChange = (e) => {\n        this.setState({description: e.target.value});\n    }\n\n    handleSubmit = () => {\n\n        this.props.onSubmit(this.state.amount, this.state.description);\n    }\n\n    render() {\n    \n        if(this.props.display){\n            return (\n                <div className='create-submit-form'>\n                    <div className='create-submit-form-calendar'>\n                        <Calendar \n                            onChange={this.props.onDateSelect}\n                            date={this.props.date}\n                        />\n                    </div>\n                    <div className='create-submit-form-form'>\n                        <form>\n                            <div className='create-submit-form-form-icon'>\n                                <FontAwesomeIcon icon={`${this.props.icon.icon}`} />\n                                <p>{this.props.icon.category}</p>\n                            </div>\n                            <div className='create-submit-form-form-amount'>\n                                <label for='amount'>Amount</label>\n                                <input name='amount' required type='number' onChange={this.onAmountChange}></input>\n                            </div>\n                            <div className='create-submit-form-form-description'> \n                                <label for='description'>Description</label>\n                                <input name='description' onChange={this.onDescriptionChange}></input>\n                            </div>\n                            <div className='create-submit-form-form-submit'>\n                                <button type=\"button\" class=\"btn btn-primary btn-lg\" onClick={this.handleSubmit}>Add</button>\n                            </div>\n                        </form>\n                        \n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div></div>\n            )\n        }\n    }\n}\n\nexport default SubmitForm;","import React, { Component } from 'react';\nimport IncomeExpenseToggle from './IncomeExpenseToggle';\nimport IconSubmitForm from './IconSubmitForm';\nimport SubmitForm from './SubmitForm';\nimport {Redirect} from 'react-router-dom';\n\n// Displays a top bar that is a choice between income/expense.\n\n// Both income and expense are structured the same, they just display different icons.\n// Submitting either income or expense sends the request to their routes. \n// /create expects to recieve {type: income/expense, category: String, description: String, amount: Number, Date, date}\n// After choosing the category, a form is displayed as well,\n\nclass Create extends Component {\n\n    state = {\n        category: null,\n        type: 'expense',\n        date: new Date(),\n        description: null,\n        amount: null,\n        redirect: false,\n    }\n\n    handleTypeToggle = () => {\n        \n        this.state.type === 'expense' ? this.setState({type: 'income', category: null}) : this.setState({type: 'expense', category: null});\n\n        \n    }\n\n    handleDateSelect = date => this.setState({date: date});\n\n    handleCategorySelect = (category) => {\n\n        console.log(category);\n\n        this.setState({category: category});\n        // console.log(e.target);\n\n        // const icon = e.target.dataset.icon;\n\n        // console.log(icon);\n\n        // const category = categoriesAndIcons[icon].category;\n\n        // if(category){\n        //     this.setState({category: category});\n        // }\n\n        // console.log(category);\n    }\n\n    getSubmitFormIcon = () => {\n\n        if (this.state.type === 'expense'){\n        const category = expenseCategoriesAndIcons.filter((expense) => {\n            console.log('expense categoory: ' + expense.category + ' state category: ' + this.state.category)\n            return expense.category === this.state.category;\n        })\n\n        return category[0];\n        } else {\n            const category = incomeCategoriesAndIcons.filter((income) => {\n                return income.category === this.state.category;\n            })\n            return category[0];\n        }\n\n    }\n\n    handleCreateSubmit = (amount, description) => {\n        console.log(amount + \"\" + description);\n        console.log(this.state);\n\n        this.setState({amount: amount, description: description});\n\n        this.submitTransaction({category: this.state.category, type: this.state.type, date: this.state.date, amount: amount, description: description});\n\n    //    after submit, let provider know that there is an update to data, and get it to fetch it.\n    };\n\n    submitTransaction = (transaction) => {\n        let token = sessionStorage.getItem('jwt');\n        return fetch('/create', {\n            method: 'POST',\n            body: JSON.stringify(transaction),\n            headers: {\n                'content-type': 'application/json',\n                'Authorization': `Bearer ${token}`,\n            },\n            \n        }).then(res => {\n            console.log(res)\n            if(res.status === 200){\n                this.props.requestUpdate();\n                this.setState({redirect: true})\n            }\n            // if 200 status,\n            // let context know that there is an update\n        })\n    }\n\n    render() {\n        if(this.state.redirect){\n            return(\n                <Redirect to='/dashboard' />\n            )\n        } else {\n        return (\n            <div className='create-container'>\n                <IncomeExpenseToggle activeType={this.state.type} onToggle={this.handleTypeToggle}/>\n\n                <IconSubmitForm \n\n                    type={this.state.type} \n                    onCategorySelect={this.handleCategorySelect} \n                    icons={this.state.type === 'expense' ? expenseCategoriesAndIcons : incomeCategoriesAndIcons}\n\n                />\n                    {/* Allows input of a date, into selected by react calendar, description, and amount */}\n                <SubmitForm \n\n                    onDateSelect={this.handleDateSelect} \n                    date={this.state.date} \n                    display={this.state.category} \n                    icon={this.getSubmitFormIcon()}\n                    onSubmit={this.handleCreateSubmit}\n                \n                />\n\n            </div>\n\n            \n        );}\n    }\n}\n\n\n\n    const incomeCategoriesAndIcons = [\n        {\n            icon: 'wallet',\n            category: 'salary',\n        }, \n        {\n            icon: 'chart-line',\n            category: 'dividends',\n        },\n        {\n            icon: 'gift',\n            category: 'gift'\n        },\n        {\n            icon: 'money-check-alt',\n            category: 'investment'\n        },\n        {\n            icon: 'undo',\n            category: 'refund',\n        }\n    ]\n   \n\n    const expenseCategoriesAndIcons = [\n         {\n            icon: 'utensils',\n            category: 'food',\n        },\n        {\n            icon: 'home',\n            category: 'rent'\n        },\n         {\n            icon: 'car',\n            category: 'car',\n        },\n         {\n            icon: 'gamepad',\n            category: 'entertainment'\n        },\n         {\n            icon: 'file-invoice-dollar',\n            category: 'bills',\n        },\n         {\n            icon: 'phone-square',\n            category: 'phone',\n        },\n         {\n            icon: 'network-wired',\n            category: 'internet',\n        },\n         {\n            icon: 'glass-cheers',\n            category: 'kick-ons',\n        }, \n         {\n            icon: 'tv',\n            category: 'electronics',\n        },\n         {\n            icon: 'star',\n            category: 'subscriptions'\n         }\n        ]\n    \n\n\n\nexport default Create;","import React, { Component } from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport './MainAppContent.css';\nimport Dashboard from './Dashboard/Dashboard';\nimport Charts from './Charts/Charts'\nimport Calender from './Calander/Calender';\nimport Create from './Create/Create'\nimport Picker from 'react-month-picker';\nimport {UserConsumer} from '../../../user-context';\n\nclass MainAppContent extends Component {\n\n    componentDidMount(){\n        // if(this.props.default){\n        //     this.props.history.push(this.props.default);\n        // }\n        // get user data, and transaction data from the server\n    }\n\n    filterTransactionsByMonth = (month, year, transactions) => {\n\n        console.log(transactions)\n\n        \n\n        const filteredTransactions = transactions.filter((transaction)=> {\n\n            const transactionDate = new Date(transaction.date);\n\n            \n\n            return (transactionDate.getMonth() === month && transactionDate.getFullYear() === year)\n        });\n\n        \n\n        return filteredTransactions;\n    }\n    render() {\n        \n        return (\n            <main className='main-app-content'>\n                {/* Here we need Calander */}\n\n                {/* <Calender /> */}\n                <UserConsumer>\n                    {context => { return (\n                        <React.Fragment>\n                            <Calender \n                            selectedMonth={context.selectedMonth} \n                            selectedYear={context.selectedYear}\n                            updateContextMonth={context.updateSelectedMonth}\n                            updateContextYear={context.updateSelectedYear}\n                            />\n\n                            <Switch>\n                                {/* this needs a parent component, which contains the switches, which holds in state the request for a redirect\n                                and the redirects url.\n                                \n                                when this occurs, it returns a <Redirect to=/URL />*/}\n                                <Route exact path ='/dashboard' \n                                // Only give transactions that are within the month of context.currentYear and currentMonth\n                                    // render={() => <Dashboard transactions={[...context.transactions]}/>}\n                                    render={() => <Dashboard \n                                                        transactions={this.filterTransactionsByMonth(context.selectedMonth, context.selectedYear, context.transactions)}\n                                                        requestUpdate={context.requestUpdate}\n                                                    />}\n                                    // component={Dashboard }\n                                />\n                                {/* <Route path ='/charts' component={Charts} /> */}\n                                <Route path ='/charts'\n                                    render={() => <Charts \n                                                    transactions={this.filterTransactionsByMonth(context.selectedMonth, context.selectedYear, context.transactions)}\n                                                    />}\n                                />\n                                <Route path = '/create' \n                                    render={() => <Create requestUpdate={context.requestUpdate}/>}\n                                />\n                            </Switch>\n                        </React.Fragment>\n                    )}}\n                </UserConsumer>\n                    {/* <Switch>\n                        <Route exact path ='/dashboard' \n                            render={() => <Dashboard transactions={this.props.transactions}/>}\n                            // component={Dashboard }\n                        />\n                        <Route path ='/charts' component={Charts} />\n                        <Route path = '/create' component={Create} />\n                    </Switch> */}\n                \n            </main>\n        );\n    }\n}\n\nexport default MainAppContent;","import React, { Component } from 'react';\nimport SideBar from './Navigation/sidebar';\nimport MainAppContent from './MainAppContent/MainAppContent';\nimport './mainappcontainer.css';\nimport {UserConsumer} from '../../user-context';\n\n\nclass MainAppContainer extends Component {\n\n    state = {\n        username: '',\n        transactions: null,\n    }\n\n    componentDidMount =  () => {\n        // get user data, settings etc from server,\n        // get user transaction data from the server\n\n        // this.getTransactionData();\n\n        // setInterval(() => {\n        //     this.getTransactionData();\n        // }, 10000);\n\n    };\n\n    // getTransactionData = async () => {\n\n    //     let token = sessionStorage.getItem('jwt');\n\n    //     let response = await fetch('/dashboard', {\n    //         method: 'GET',\n    //         headers: {\n    //             'content-type': 'application/json',\n    //             'Authorization': `Bearer ${token}`,\n    //         }\n    //     });\n\n    //     response = await response.json();\n\n        \n    //     return response;\n    // }\n\n    getTransactionData = () => {\n        let token = sessionStorage.getItem('jwt');\n\n        fetch('/dashboard', {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'Authorization': `Bearer ${token}`,\n            }\n        }).then(response => {\n            return response.json();\n        }).then(parsedJson => {\n            console.log(parsedJson);\n            this.setUserData(parsedJson);\n            // this.setTransactionData(parsedJson.transactions);\n        })\n    };\n\n    setUserData = (userData) => {\n        this.props.updateUserData(userData);\n        // this.setState({username: userData.username});\n    };\n\n    // setTransactionData = (transactionData) => {\n    //     this.setState({transactions: transactionData});\n    // };\n\n    render() {\n\n        \n        return (\n            <UserConsumer >\n                {context => (\n                    <div className='main-app'>\n                        {/* <SideBar username={this.state.username}/>\n                        <div className='main-app-container'>\n                            <MainAppContent default={this.props.default}  transactions={this.state.transactions}/>\n                        </div> */}\n                        <SideBar username={context.username}/>\n                        <div className='main-app-container'>\n                            <MainAppContent default={this.props.default} transactions={[...context.transactions]}/>\n                        </div>\n                    </div>\n                )}\n            </UserConsumer>\n            \n\n            \n        );\n    }\n}\n\nexport default MainAppContainer;","import React, {Component} from 'react'\nimport ToggleableForm from '../SignIn/ToggleableForm/ToggleableForm';\nimport MainAppContainer from '../App/MainAppContainer'\nimport {Redirect} from 'react-router-dom';\nimport './container.css';\nimport {UserConsumer} from '../../user-context';\n\nclass Container extends Component {\n\n    state = {\n        \n        logIn: false,\n        loggedIn: false,\n        token: null,\n    }\n\n    handleSignUpForm = (credentials) => {\n        console.log(credentials);\n        return fetch('/register',  {\n            method: 'post',\n            body: JSON.stringify(credentials),\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n            },\n          }).then(res => console.log(res));\n    };\n\n    \n\n    handleLogInForm = (credentials) => {\n\n        return fetch('/login', {\n            method: 'post',\n            body: JSON.stringify(credentials),\n            headers: {\n                'Accept': 'application/json',\n                'content-type': 'application/json',\n            },\n        }).then(res => {\n            if(res.status === 200){\n                \n                \n                res.json().then( res => {\n                    this.handleLogInResponse(res)\n                    this.props.logInSuccess();\n                });                              \n\n            } else {\n                console.log('No Token Authorized')\n            }\n        })\n        \n    };\n\n    handleLogInResponse = (res) => {\n        // set the token in state, or in the context api.\n        // console.log(res.token);\n        sessionStorage.setItem('jwt', res.token);\n        \n        this.props.setJwt(res.token);\n        // this.setState({resStatus: res.status});\n        // console.log(sessionStorage.getItem('jwt'));\n        // console.log(res.json());\n    };\n\n    authenticateUser = () => {\n        \n        let token = sessionStorage.getItem('jwt');\n\n        \n        fetch('/checkToken', {\n            method: 'GET',\n            headers : {\n                'content-type': 'application/json',\n                'Authorization': `Bearer ${token}`,\n            }\n        }).then(res => {\n            if(res.status === 200){\n                this.props.setJwt(token);\n                this.props.logInSuccess()\n            }\n            \n        })\n    };\n\n    handleRegisterPageRequest = () => {\n        this.setState({logIn: true});\n    }\n\n    componentDidMount(){\n        \n        this.authenticateUser();\n        // check if the user is storing a valid jwt.\n    };\n\n    render(){\n\n        console.log(this.props)\n\n        \n\n        if(this.props.authenticated){\n            return (\n                <div className='app'>\n                    <UserConsumer>\n                        {context => (\n                            <MainAppContainer default='/dashboard' updateUserData={context.updateUserData}/>\n                        )}\n                        \n                    </UserConsumer>\n                    \n                </div>\n                // <Redirect to='/dashboard' />\n            )\n        } else if (this.state.logIn){\n            return (\n                <div className='app'>\n                    <UserConsumer>\n                        \n                        {\n                            context => (\n                            \n                            <ToggleableForm \n                        \n                            handleSignUpForm={this.handleSignUpForm} \n                            handleLogInForm={this.handleLogInForm}\n                            logInSuccess={context.logInSuccess}\n\n                            />     \n\n                            )}\n                    </UserConsumer>\n                    \n                </div>\n                \n            )\n        } else {\n            return (\n                <div className='app'>\n                    <Landing onRegisterPageRequest={this.handleRegisterPageRequest}/>\n                </div>\n                \n            )\n        }\n        \n    }\n};\n\nconst Landing = (props) => {\n\n    return (\n        <div className='landing-container'>\n            <div className='landing-content'>\n                <div className='landing-header'>\n                    <p className='landing-header-title'>\n                        Budget Tracker\n                    </p>\n                </div>\n                <div className='landing-navigation'>\n                    <div className='landing-navigation-register' onClick={props.onRegisterPageRequest}>\n                        <p>Log In / Register</p>\n                    </div>\n                    <div className='landing-navigation-about'>\n                        <p>About</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Container;","import React from 'react';\nimport Container from '../src/Components/Container/container';\nimport {BrowserRouter} from 'react-router-dom';\nimport {library} from '@fortawesome/fontawesome-svg-core';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport { faUtensils, faHome, faCar, faGamepad, faFileInvoiceDollar, faPhoneSquare, faNetworkWired, faGlassCheers, faTv, faStar, faWallet, faChartLine, faGift, faUndo, faMoneyCheckAlt, faEdit, faTrashAlt, faSortDown, faSortUp } from '@fortawesome/free-solid-svg-icons';\nimport {UserProvider} from './user-context';\nimport {UserConsumer} from './user-context';\n\nlibrary.add(faUtensils, faHome, faCar, faGamepad, faFileInvoiceDollar, faPhoneSquare, faNetworkWired, faGlassCheers, faTv, faStar, faWallet, faChartLine, faGift, faUndo, faMoneyCheckAlt, faEdit, faTrashAlt, faSortDown, faSortUp);\n\nfunction App() {\n  return (\n      <div>\n        <BrowserRouter>\n          <UserProvider >\n            <UserConsumer>\n              {context => (\n                <Container \n                      setJwt={context.setJwt}\n                      logInSuccess={context.logInSuccess} \n                      authenticated={context.authenticated}/>\n              )}\n            </UserConsumer>\n            \n          </UserProvider>          \n        </BrowserRouter>\n          \n      </div>\n      \n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/default-icon.cc6584da.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/no-image.9cc9fe93.jpeg\";"],"sourceRoot":""}