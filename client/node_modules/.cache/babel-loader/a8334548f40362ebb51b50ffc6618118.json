{"ast":null,"code":"var _jsxFileName = \"/home/clinnygee/Documents/portfolio-projects/expense-tracker/src/Components/App/MainAppContent/Dashboard/Dashboard.js\";\nimport React, { Component } from 'react';\nimport Summary from './Summary/Summary';\nimport CreateButton from './CreateButton';\nimport { Link } from 'react-router-dom';\nimport EditableTransaction from './EditableTransaction';\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      totalIncome: '',\n      totalExpenses: ''\n    };\n\n    this.setTotalIncomeAndExpense = () => {\n      let totalExpense = 0;\n      let totalIncome = 0;\n\n      if (this.props.transactions) {\n        this.props.transactions.forEach(transaction => {\n          if (transaction.type === 'income') {\n            totalIncome += transaction.amount;\n          } else {\n            totalExpense += transaction.amount;\n          }\n        });\n      }\n\n      console.log(totalExpense + \" \" + totalIncome);\n      this.setState({\n        totalIncome: totalIncome,\n        totalExpenses: totalExpense\n      });\n    };\n\n    this.handleDeleteTransactions = async transactionId => {\n      console.log(JSON.stringify({\n        transaction_id: transactionId\n      }));\n      let token = sessionStorage.getItem('jwt');\n      let response = await fetch('/transactions/delete', {\n        method: 'DELETE',\n        body: JSON.stringify({\n          transaction_id: transactionId\n        }),\n        headers: {\n          'content-type': 'application/json',\n          'Authorization': \"Bearer \".concat(token)\n        }\n      });\n      console.log(response);\n\n      if (response.status === 200) {\n        this.props.requestUpdate();\n      } // if(json.status === 200){\n      //     this.props.requestUpdate();\n      // }\n\n\n      console.log('Delete transaction with Id of: ' + transactionId);\n    };\n\n    this.componentDidMount = () => {// this.setTotalIncomeAndExpense();\n    };\n\n    this.componentWillReceiveProps = () => {// this.setTotalIncomeAndExpense();\n    };\n  }\n\n  render() {\n    let transactions = null; // this.setTotalIncomeAndExpense()\n\n    if (this.props.transactions) {\n      transactions = this.props.transactions.map(transaction => React.createElement(EditableTransaction, {\n        key: transaction._id,\n        id: transaction._id,\n        type: transaction.type,\n        category: transaction.category,\n        date: transaction.date,\n        amount: transaction.amount,\n        description: transaction.description,\n        onDeleteTransaction: this.handleDeleteTransactions // add a function that is called when the delete button is clicked.\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }));\n    }\n\n    console.log(\"In Dashboard, transactions : \".concat(this.props.transactions));\n    return React.createElement(\"div\", {\n      className: \"dashboard-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Summary, {\n      transactions: this.props.transactions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"dashboard-scrollable-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, transactions), React.createElement(Link, {\n      to: \"/create\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(CreateButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })));\n  }\n\n}\n\n;\nexport default Dashboard;","map":{"version":3,"sources":["/home/clinnygee/Documents/portfolio-projects/expense-tracker/src/Components/App/MainAppContent/Dashboard/Dashboard.js"],"names":["React","Component","Summary","CreateButton","Link","EditableTransaction","Dashboard","state","totalIncome","totalExpenses","setTotalIncomeAndExpense","totalExpense","props","transactions","forEach","transaction","type","amount","console","log","setState","handleDeleteTransactions","transactionId","JSON","stringify","transaction_id","token","sessionStorage","getItem","response","fetch","method","body","headers","status","requestUpdate","componentDidMount","componentWillReceiveProps","render","map","_id","category","date","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;;AAEA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAK1BM,KAL0B,GAKlB;AACJC,MAAAA,WAAW,EAAE,EADT;AAEJC,MAAAA,aAAa,EAAE;AAFX,KALkB;;AAAA,SAc9BC,wBAd8B,GAcH,MAAM;AAC7B,UAAIC,YAAY,GAAG,CAAnB;AACA,UAAIH,WAAW,GAAG,CAAlB;;AAGA,UAAG,KAAKI,KAAL,CAAWC,YAAd,EAA2B;AAC3B,aAAKD,KAAL,CAAWC,YAAX,CAAwBC,OAAxB,CAAgCC,WAAW,IAAI;AAC3C,cAAGA,WAAW,CAACC,IAAZ,KAAqB,QAAxB,EAAiC;AAC7BR,YAAAA,WAAW,IAAIO,WAAW,CAACE,MAA3B;AACH,WAFD,MAEO;AACHN,YAAAA,YAAY,IAAII,WAAW,CAACE,MAA5B;AACH;AACJ,SAND;AAMI;;AAEJC,MAAAA,OAAO,CAACC,GAAR,CAAYR,YAAY,GAAG,GAAf,GAAqBH,WAAjC;AAEA,WAAKY,QAAL,CAAc;AAACZ,QAAAA,WAAW,EAAEA,WAAd;AAA2BC,QAAAA,aAAa,EAAEE;AAA1C,OAAd;AACH,KA/B6B;;AAAA,SAiC9BU,wBAjC8B,GAiCH,MAAOC,aAAP,IAAyB;AAEhDJ,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAI,CAACC,SAAL,CAAe;AAACC,QAAAA,cAAc,EAAEH;AAAjB,OAAf,CAAZ;AACA,UAAII,KAAK,GAAGC,cAAc,CAACC,OAAf,CAAuB,KAAvB,CAAZ;AAEA,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sBAAD,EAAyB;AAC/CC,QAAAA,MAAM,EAAE,QADuC;AAE/CC,QAAAA,IAAI,EAAET,IAAI,CAACC,SAAL,CAAe;AAACC,UAAAA,cAAc,EAAEH;AAAjB,SAAf,CAFyC;AAG/CW,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,4CAA2BP,KAA3B;AAFK;AAHsC,OAAzB,CAA1B;AAQIR,MAAAA,OAAO,CAACC,GAAR,CAAYU,QAAZ;;AAIA,UAAGA,QAAQ,CAACK,MAAT,KAAoB,GAAvB,EAA2B;AACvB,aAAKtB,KAAL,CAAWuB,aAAX;AACH,OAnB2C,CAqB5C;AACA;AACA;;;AAGJjB,MAAAA,OAAO,CAACC,GAAR,CAAY,oCAAmCG,aAA/C;AACH,KA5D6B;;AAAA,SAgE9Bc,iBAhE8B,GAgEV,MAAM,CACtB;AACH,KAlE6B;;AAAA,SAoE9BC,yBApE8B,GAoEF,MAAM,CAC9B;AACH,KAtE6B;AAAA;;AAwE9BC,EAAAA,MAAM,GAAG;AAEL,QAAIzB,YAAY,GAAG,IAAnB,CAFK,CAIL;;AAEA,QAAG,KAAKD,KAAL,CAAWC,YAAd,EAA2B;AACvBA,MAAAA,YAAY,GAAG,KAAKD,KAAL,CAAWC,YAAX,CAAwB0B,GAAxB,CAA6BxB,WAAD,IACvC,oBAAC,mBAAD;AAEI,QAAA,GAAG,EAAEA,WAAW,CAACyB,GAFrB;AAGI,QAAA,EAAE,EAAEzB,WAAW,CAACyB,GAHpB;AAII,QAAA,IAAI,EAAEzB,WAAW,CAACC,IAJtB;AAKI,QAAA,QAAQ,EAAED,WAAW,CAAC0B,QAL1B;AAMI,QAAA,IAAI,EAAE1B,WAAW,CAAC2B,IANtB;AAOI,QAAA,MAAM,EAAE3B,WAAW,CAACE,MAPxB;AAQI,QAAA,WAAW,EAAEF,WAAW,CAAC4B,WAR7B;AASI,QAAA,mBAAmB,EAAE,KAAKtB,wBAT9B,CAUI;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADW,CAAf;AAeH;;AAEDH,IAAAA,OAAO,CAACC,GAAR,wCAA4C,KAAKP,KAAL,CAAWC,YAAvD;AACA,WACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,OAAD;AAAS,MAAA,YAAY,EAAE,KAAKD,KAAL,CAAWC,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,YADL,CAHJ,EASI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CATJ,CADJ;AAgBH;;AAjH6B;;AAkHjC;AAOD,eAAeP,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport Summary from './Summary/Summary';\nimport CreateButton from './CreateButton';\nimport {Link} from 'react-router-dom';\nimport EditableTransaction from './EditableTransaction';\n\nclass Dashboard extends Component {\n\n    // This component WILL only receive props that are for the current month\n\n\n        state = {\n            totalIncome: '',\n            totalExpenses: '',\n\n        }\n\n        \n    \n\n    setTotalIncomeAndExpense = () => {\n        let totalExpense = 0; \n        let totalIncome = 0;\n\n\n        if(this.props.transactions){\n        this.props.transactions.forEach(transaction => {\n            if(transaction.type === 'income'){\n                totalIncome += transaction.amount;\n            } else {\n                totalExpense += transaction.amount;\n            }\n        });} \n\n        console.log(totalExpense + \" \" + totalIncome);\n\n        this.setState({totalIncome: totalIncome, totalExpenses: totalExpense});\n    }\n\n    handleDeleteTransactions = async (transactionId) => {\n\n        console.log(JSON.stringify({transaction_id: transactionId}))\n        let token = sessionStorage.getItem('jwt');\n\n        let response = await fetch('/transactions/delete', {\n            method: 'DELETE',\n            body: JSON.stringify({transaction_id: transactionId}),\n            headers: {\n                'content-type': 'application/json',\n                'Authorization': `Bearer ${token}`,\n            }});\n\n            console.log(response);\n\n            \n\n            if(response.status === 200){\n                this.props.requestUpdate();\n            }\n\n            // if(json.status === 200){\n            //     this.props.requestUpdate();\n            // }\n\n\n        console.log('Delete transaction with Id of: ' +transactionId);\n    }\n\n    \n\n    componentDidMount = () => {\n        // this.setTotalIncomeAndExpense();\n    }\n\n    componentWillReceiveProps = () => {\n        // this.setTotalIncomeAndExpense();\n    }\n\n    render() {\n\n        let transactions = null;\n\n        // this.setTotalIncomeAndExpense()\n\n        if(this.props.transactions){\n            transactions = this.props.transactions.map((transaction) => (\n                <EditableTransaction \n\n                    key={transaction._id}\n                    id={transaction._id} \n                    type={transaction.type} \n                    category={transaction.category}\n                    date={transaction.date}\n                    amount={transaction.amount}\n                    description={transaction.description}\n                    onDeleteTransaction={this.handleDeleteTransactions}\n                    // add a function that is called when the delete button is clicked.\n                    \n                />\n            ))\n        }\n\n        console.log(`In Dashboard, transactions : ${this.props.transactions}`)\n        return (\n            <div className='dashboard-container'>\n                {/* Summary */}\n                <Summary transactions={this.props.transactions}/>\n                <div className='dashboard-scrollable-container'>\n                    {transactions}\n                    {/* List of this months expenditures, which allows you when clicking on them to edit them */}\n                </div>\n                \n                {/* Bottom right, a create icon to add income or expense */}\n                <Link to='/create'>\n                    <CreateButton />\n                </Link>\n                \n            </div>\n        );\n    }\n};\n\n\n\n\n\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}