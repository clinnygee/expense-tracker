{"ast":null,"code":"var _jsxFileName = \"/home/clinnygee/Documents/portfolio-projects/expense-tracker/src/Components/App/MainAppContent/MainAppContent.js\";\nimport React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport './MainAppContent.css';\nimport Dashboard from './Dashboard/Dashboard';\nimport Charts from './Charts/Charts';\nimport Calender from './Calander/Calender';\nimport Create from './Create/Create';\nimport Picker from 'react-month-picker';\nimport { UserConsumer } from '../../../user-context';\n\nclass MainAppContent extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.filterTransactionsByMonth = (month, year, transactions) => {\n      console.log(transactions);\n      console.log(\"in filterTransactionsByMonth, pre-filtered transactions: \".concat(transactions));\n      const filteredTransactions = transactions.filter(transaction => {\n        const transactionDate = new Date(transaction.date);\n        console.log(transactionDate.getMonth());\n        console.log(transactionDate.getYear());\n        return transactionDate.getMonth() === month && transactionDate.getFullYear() === year;\n      });\n      console.log(\"in filterTransactionsByMonth, post-filtered transactions: \".concat(filteredTransactions));\n      return filteredTransactions;\n    };\n  }\n\n  componentDidMount() {// if(this.props.default){\n    //     this.props.history.push(this.props.default);\n    // }\n    // get user data, and transaction data from the server\n  }\n\n  render() {\n    return React.createElement(\"main\", {\n      className: \"main-app-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(UserConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, context => {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Calender, {\n        selectedMonth: context.selectedMonth,\n        selectedYear: context.selectedYear,\n        updateContextMonth: context.updateSelectedMonth,\n        updateContextYear: context.updateSelectedYear,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/dashboard\" // Only give transactions that are within the month of context.currentYear and currentMonth\n        // render={() => <Dashboard transactions={[...context.transactions]}/>}\n        ,\n        render: () => React.createElement(Dashboard, {\n          transactions: this.filterTransactionsByMonth(context.selectedMonth, context.selectedYear, context.transactions),\n          requestUpdate: context.requestUpdate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }) // component={Dashboard }\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/charts\",\n        render: () => React.createElement(Charts, {\n          transactions: this.filterTransactionsByMonth(context.selectedMonth, context.selectedYear, context.transactions),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/create\",\n        render: () => React.createElement(Create, {\n          requestUpdate: context.requestUpdate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })));\n    }));\n  }\n\n}\n\nexport default MainAppContent;","map":{"version":3,"sources":["/home/clinnygee/Documents/portfolio-projects/expense-tracker/src/Components/App/MainAppContent/MainAppContent.js"],"names":["React","Component","Switch","Route","Dashboard","Charts","Calender","Create","Picker","UserConsumer","MainAppContent","filterTransactionsByMonth","month","year","transactions","console","log","filteredTransactions","filter","transaction","transactionDate","Date","date","getMonth","getYear","getFullYear","componentDidMount","render","context","selectedMonth","selectedYear","updateSelectedMonth","updateSelectedYear","requestUpdate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport './MainAppContent.css';\nimport Dashboard from './Dashboard/Dashboard';\nimport Charts from './Charts/Charts'\nimport Calender from './Calander/Calender';\nimport Create from './Create/Create'\nimport Picker from 'react-month-picker';\nimport {UserConsumer} from '../../../user-context';\n\nclass MainAppContent extends Component {\n\n    componentDidMount(){\n        // if(this.props.default){\n        //     this.props.history.push(this.props.default);\n        // }\n        // get user data, and transaction data from the server\n    }\n\n    filterTransactionsByMonth = (month, year, transactions) => {\n\n        console.log(transactions)\n\n        console.log(`in filterTransactionsByMonth, pre-filtered transactions: ${transactions}`)\n\n        const filteredTransactions = transactions.filter((transaction)=> {\n\n            const transactionDate = new Date(transaction.date);\n\n            console.log(transactionDate.getMonth());\n            console.log(transactionDate.getYear())\n\n            return (transactionDate.getMonth() === month && transactionDate.getFullYear() === year)\n        });\n\n        console.log(`in filterTransactionsByMonth, post-filtered transactions: ${filteredTransactions}`);\n\n        return filteredTransactions;\n    }\n    render() {\n        \n        return (\n            <main className='main-app-content'>\n                {/* Here we need Calander */}\n\n                {/* <Calender /> */}\n                <UserConsumer>\n                    {context => { return (\n                        <React.Fragment>\n                            <Calender \n                            selectedMonth={context.selectedMonth} \n                            selectedYear={context.selectedYear}\n                            updateContextMonth={context.updateSelectedMonth}\n                            updateContextYear={context.updateSelectedYear}\n                            />\n\n                            <Switch>\n                                {/* this needs a parent component, which contains the switches, which holds in state the request for a redirect\n                                and the redirects url.\n                                \n                                when this occurs, it returns a <Redirect to=/URL />*/}\n                                <Route exact path ='/dashboard' \n                                // Only give transactions that are within the month of context.currentYear and currentMonth\n                                    // render={() => <Dashboard transactions={[...context.transactions]}/>}\n                                    render={() => <Dashboard \n                                                        transactions={this.filterTransactionsByMonth(context.selectedMonth, context.selectedYear, context.transactions)}\n                                                        requestUpdate={context.requestUpdate}\n                                                    />}\n                                    // component={Dashboard }\n                                />\n                                {/* <Route path ='/charts' component={Charts} /> */}\n                                <Route path ='/charts'\n                                    render={() => <Charts \n                                                    transactions={this.filterTransactionsByMonth(context.selectedMonth, context.selectedYear, context.transactions)}\n                                                    />}\n                                />\n                                <Route path = '/create' \n                                    render={() => <Create requestUpdate={context.requestUpdate}/>}\n                                />\n                            </Switch>\n                        </React.Fragment>\n                    )}}\n                </UserConsumer>\n                    {/* <Switch>\n                        <Route exact path ='/dashboard' \n                            render={() => <Dashboard transactions={this.props.transactions}/>}\n                            // component={Dashboard }\n                        />\n                        <Route path ='/charts' component={Charts} />\n                        <Route path = '/create' component={Create} />\n                    </Switch> */}\n                \n            </main>\n        );\n    }\n}\n\nexport default MainAppContent;"]},"metadata":{},"sourceType":"module"}