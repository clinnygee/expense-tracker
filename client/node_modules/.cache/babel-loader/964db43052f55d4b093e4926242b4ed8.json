{"ast":null,"code":"var _jsxFileName = \"/home/clinnygee/Documents/portfolio-projects/expense-tracker/client/src/Components/App/MainAppContent/Create/Create.js\";\nimport React, { Component } from 'react';\nimport IncomeExpenseToggle from './IncomeExpenseToggle';\nimport IconSubmitForm from './IconSubmitForm';\nimport SubmitForm from './SubmitForm';\nimport { Redirect } from 'react-router-dom'; // Displays a top bar that is a choice between income/expense.\n// Both income and expense are structured the same, they just display different icons.\n// Submitting either income or expense sends the request to their routes. \n// /create expects to recieve {type: income/expense, category: String, description: String, amount: Number, Date, date}\n// After choosing the category, a form is displayed as well,\n\nclass Create extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      category: null,\n      type: 'expense',\n      date: new Date(),\n      description: null,\n      amount: null,\n      redirect: false\n    };\n\n    this.handleTypeToggle = () => {\n      this.state.type === 'expense' ? this.setState({\n        type: 'income',\n        category: null\n      }) : this.setState({\n        type: 'expense',\n        category: null\n      });\n    };\n\n    this.handleDateSelect = date => this.setState({\n      date: date\n    });\n\n    this.handleCategorySelect = category => {\n      console.log(category);\n      this.setState({\n        category: category\n      }); // console.log(e.target);\n      // const icon = e.target.dataset.icon;\n      // console.log(icon);\n      // const category = categoriesAndIcons[icon].category;\n      // if(category){\n      //     this.setState({category: category});\n      // }\n      // console.log(category);\n    };\n\n    this.getSubmitFormIcon = () => {\n      if (this.state.type === 'expense') {\n        const category = expenseCategoriesAndIcons.filter(expense => {\n          console.log('expense categoory: ' + expense.category + ' state category: ' + this.state.category);\n          return expense.category === this.state.category;\n        });\n        return category[0];\n      } else {\n        const category = incomeCategoriesAndIcons.filter(income => {\n          return income.category === this.state.category;\n        });\n        return category[0];\n      }\n    };\n\n    this.handleCreateSubmit = (amount, description) => {\n      console.log(amount + \"\" + description);\n      console.log(this.state);\n      this.setState({\n        amount: amount,\n        description: description\n      });\n      this.submitTransaction({\n        category: this.state.category,\n        type: this.state.type,\n        date: this.state.date,\n        amount: amount,\n        description: description\n      }); //    after submit, let provider know that there is an update to data, and get it to fetch it.\n    };\n\n    this.submitTransaction = transaction => {\n      let token = sessionStorage.getItem('jwt');\n      return fetch('/create', {\n        method: 'POST',\n        body: JSON.stringify(transaction),\n        headers: {\n          'content-type': 'application/json',\n          'Authorization': \"Bearer \".concat(token)\n        }\n      }).then(res => {\n        console.log(res);\n\n        if (res.status === 200) {\n          this.props.requestUpdate();\n          this.setState({\n            redirect: true\n          });\n        } // if 200 status,\n        // let context know that there is an update\n\n      });\n    };\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return React.createElement(Redirect, {\n        to: \"/dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        className: \"create-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(IncomeExpenseToggle, {\n        activeType: this.state.type,\n        onToggle: this.handleTypeToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(IconSubmitForm, {\n        type: this.state.type,\n        onCategorySelect: this.handleCategorySelect,\n        icons: this.state.type === 'expense' ? expenseCategoriesAndIcons : incomeCategoriesAndIcons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(SubmitForm, {\n        onDateSelect: this.handleDateSelect,\n        date: this.state.date,\n        display: this.state.category,\n        icon: this.getSubmitFormIcon(),\n        onSubmit: this.handleCreateSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nconst incomeCategoriesAndIcons = [{\n  icon: 'wallet',\n  category: 'salary'\n}, {\n  icon: 'chart-line',\n  category: 'dividends'\n}, {\n  icon: 'gift',\n  category: 'gift'\n}, {\n  icon: 'money-check-alt',\n  category: 'investment'\n}, {\n  icon: 'undo',\n  category: 'refund'\n}];\nconst expenseCategoriesAndIcons = [{\n  icon: 'utensils',\n  category: 'food'\n}, {\n  icon: 'home',\n  category: 'rent'\n}, {\n  icon: 'car',\n  category: 'car'\n}, {\n  icon: 'gamepad',\n  category: 'entertainment'\n}, {\n  icon: 'file-invoice-dollar',\n  category: 'bills'\n}, {\n  icon: 'phone-square',\n  category: 'phone'\n}, {\n  icon: 'network-wired',\n  category: 'internet'\n}, {\n  icon: 'glass-cheers',\n  category: 'kick-ons'\n}, {\n  icon: 'tv',\n  category: 'electronics'\n}, {\n  icon: 'star',\n  category: 'subscriptions'\n}];\nexport default Create;","map":{"version":3,"sources":["/home/clinnygee/Documents/portfolio-projects/expense-tracker/client/src/Components/App/MainAppContent/Create/Create.js"],"names":["React","Component","IncomeExpenseToggle","IconSubmitForm","SubmitForm","Redirect","Create","state","category","type","date","Date","description","amount","redirect","handleTypeToggle","setState","handleDateSelect","handleCategorySelect","console","log","getSubmitFormIcon","expenseCategoriesAndIcons","filter","expense","incomeCategoriesAndIcons","income","handleCreateSubmit","submitTransaction","transaction","token","sessionStorage","getItem","fetch","method","body","JSON","stringify","headers","then","res","status","props","requestUpdate","render","icon"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport IncomeExpenseToggle from './IncomeExpenseToggle';\nimport IconSubmitForm from './IconSubmitForm';\nimport SubmitForm from './SubmitForm';\nimport {Redirect} from 'react-router-dom';\n\n// Displays a top bar that is a choice between income/expense.\n\n// Both income and expense are structured the same, they just display different icons.\n// Submitting either income or expense sends the request to their routes. \n// /create expects to recieve {type: income/expense, category: String, description: String, amount: Number, Date, date}\n// After choosing the category, a form is displayed as well,\n\nclass Create extends Component {\n\n    state = {\n        category: null,\n        type: 'expense',\n        date: new Date(),\n        description: null,\n        amount: null,\n        redirect: false,\n    }\n\n    handleTypeToggle = () => {\n        \n        this.state.type === 'expense' ? this.setState({type: 'income', category: null}) : this.setState({type: 'expense', category: null});\n\n        \n    }\n\n    handleDateSelect = date => this.setState({date: date});\n\n    handleCategorySelect = (category) => {\n\n        console.log(category);\n\n        this.setState({category: category});\n        // console.log(e.target);\n\n        // const icon = e.target.dataset.icon;\n\n        // console.log(icon);\n\n        // const category = categoriesAndIcons[icon].category;\n\n        // if(category){\n        //     this.setState({category: category});\n        // }\n\n        // console.log(category);\n    }\n\n    getSubmitFormIcon = () => {\n\n        if (this.state.type === 'expense'){\n        const category = expenseCategoriesAndIcons.filter((expense) => {\n            console.log('expense categoory: ' + expense.category + ' state category: ' + this.state.category)\n            return expense.category === this.state.category;\n        })\n\n        return category[0];\n        } else {\n            const category = incomeCategoriesAndIcons.filter((income) => {\n                return income.category === this.state.category;\n            })\n            return category[0];\n        }\n\n    }\n\n    handleCreateSubmit = (amount, description) => {\n        console.log(amount + \"\" + description);\n        console.log(this.state);\n\n        this.setState({amount: amount, description: description});\n\n        this.submitTransaction({category: this.state.category, type: this.state.type, date: this.state.date, amount: amount, description: description});\n\n    //    after submit, let provider know that there is an update to data, and get it to fetch it.\n    };\n\n    submitTransaction = (transaction) => {\n        let token = sessionStorage.getItem('jwt');\n        return fetch('/create', {\n            method: 'POST',\n            body: JSON.stringify(transaction),\n            headers: {\n                'content-type': 'application/json',\n                'Authorization': `Bearer ${token}`,\n            },\n            \n        }).then(res => {\n            console.log(res)\n            if(res.status === 200){\n                this.props.requestUpdate();\n                this.setState({redirect: true})\n            }\n            // if 200 status,\n            // let context know that there is an update\n        })\n    }\n\n    render() {\n        if(this.state.redirect){\n            return(\n                <Redirect to='/dashboard' />\n            )\n        } else {\n        return (\n            <div className='create-container'>\n                <IncomeExpenseToggle activeType={this.state.type} onToggle={this.handleTypeToggle}/>\n\n                <IconSubmitForm \n\n                    type={this.state.type} \n                    onCategorySelect={this.handleCategorySelect} \n                    icons={this.state.type === 'expense' ? expenseCategoriesAndIcons : incomeCategoriesAndIcons}\n\n                />\n                    {/* Allows input of a date, into selected by react calendar, description, and amount */}\n                <SubmitForm \n\n                    onDateSelect={this.handleDateSelect} \n                    date={this.state.date} \n                    display={this.state.category} \n                    icon={this.getSubmitFormIcon()}\n                    onSubmit={this.handleCreateSubmit}\n                \n                />\n\n            </div>\n\n            \n        );}\n    }\n}\n\n\n\n    const incomeCategoriesAndIcons = [\n        {\n            icon: 'wallet',\n            category: 'salary',\n        }, \n        {\n            icon: 'chart-line',\n            category: 'dividends',\n        },\n        {\n            icon: 'gift',\n            category: 'gift'\n        },\n        {\n            icon: 'money-check-alt',\n            category: 'investment'\n        },\n        {\n            icon: 'undo',\n            category: 'refund',\n        }\n    ]\n   \n\n    const expenseCategoriesAndIcons = [\n         {\n            icon: 'utensils',\n            category: 'food',\n        },\n        {\n            icon: 'home',\n            category: 'rent'\n        },\n         {\n            icon: 'car',\n            category: 'car',\n        },\n         {\n            icon: 'gamepad',\n            category: 'entertainment'\n        },\n         {\n            icon: 'file-invoice-dollar',\n            category: 'bills',\n        },\n         {\n            icon: 'phone-square',\n            category: 'phone',\n        },\n         {\n            icon: 'network-wired',\n            category: 'internet',\n        },\n         {\n            icon: 'glass-cheers',\n            category: 'kick-ons',\n        }, \n         {\n            icon: 'tv',\n            category: 'electronics',\n        },\n         {\n            icon: 'star',\n            category: 'subscriptions'\n         }\n        ]\n    \n\n\n\nexport default Create;"]},"metadata":{},"sourceType":"module"}