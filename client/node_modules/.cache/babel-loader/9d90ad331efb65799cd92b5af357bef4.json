{"ast":null,"code":"var _jsxFileName = \"/home/clinnygee/Documents/portfolio-projects/expense-tracker/src/Components/App/Navigation/sidebar.js\";\nimport React, { Component } from 'react';\nimport './sidebar.css';\nimport ThumbnailPicture from '../../../img/default-icon.jpeg';\nimport NoImage from '../../../img/no-image.jpeg';\nimport SidebarNavigation from './SidebarNavigation';\nimport { UserConsumer } from '../../../user-context';\n\nclass sidebar extends Component {\n  render() {\n    // Set up react router, i think every link should be included in a <Link /> which references one of the different options to display\n    // in the content display\n    return React.createElement(\"div\", {\n      className: \"sidebar-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sidebar-nav-head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(SidebarUserPhoto, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"sidebar-nav-header-username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, this.props.username)), React.createElement(\"div\", {\n      className: \"sidebar-nav-header-settings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-camera\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"sidebar-nav-links\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(UserConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, context => React.createElement(SidebarNavigation, {\n      signOut: context.signOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }))));\n  }\n\n}\n\n;\n\nclass SidebarUserPhoto extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      upload: false,\n      fileURL: null,\n      file: null\n    };\n\n    this.toggleOpenForm = () => {\n      console.log('open the fucking modal');\n      this.setState({\n        upload: !this.state.upload\n      });\n    };\n\n    this.handleFileChange = e => {\n      this.setState({\n        fileURL: URL.createObjectURL(e.target.files[0]),\n        file: e.target.files[0]\n      });\n      setTimeout(3000, console.log(this.state.file));\n    };\n\n    this.onFileSubmit = async e => {\n      e.preventDefault(); // send to the server,\n\n      const res = await fetch('/user/photo', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'multipart/form-data'\n        },\n        body: this.state.file\n      });\n      console.log(res); // when the server responds that it works,\n      // retrieve user data from the server, so that the image update is displayed.\n      // close the modal.\n    };\n  }\n\n  render() {\n    if (this.state.upload) {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"sidebar-nav-header-icon\",\n        onClick: this.toggleOpenForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: ThumbnailPicture,\n        alt: \"user-icon\",\n        onClick: this.toggleOpenForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"modal-photo-upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-photo-upload-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-photo-upload-close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"close\",\n        onClick: this.toggleOpenForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"X\")), React.createElement(\"div\", {\n        className: \"modal-photo-upload-form-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"modal-photo-upload-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-photo-upload-preview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.fileURL ? this.state.fileURL : NoImage,\n        alt: \"upload preview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.handleFileChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Upload\",\n        className: \"btn btn-primary btn-lg\",\n        onClick: this.onFileSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }))))));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"sidebar-nav-header-icon\",\n        onClick: this.toggleOpenForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: ThumbnailPicture,\n        alt: \"user-icon\",\n        onClick: this.toggleOpenForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default sidebar;","map":{"version":3,"sources":["/home/clinnygee/Documents/portfolio-projects/expense-tracker/src/Components/App/Navigation/sidebar.js"],"names":["React","Component","ThumbnailPicture","NoImage","SidebarNavigation","UserConsumer","sidebar","render","props","username","context","signOut","SidebarUserPhoto","state","upload","fileURL","file","toggleOpenForm","console","log","setState","handleFileChange","e","URL","createObjectURL","target","files","setTimeout","onFileSubmit","preventDefault","res","fetch","method","headers","body"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './sidebar.css'\nimport ThumbnailPicture from '../../../img/default-icon.jpeg';\nimport NoImage from '../../../img/no-image.jpeg'\nimport SidebarNavigation from './SidebarNavigation';\nimport {UserConsumer} from '../../../user-context';\n\n\nclass sidebar extends Component {\n    render() {\n        // Set up react router, i think every link should be included in a <Link /> which references one of the different options to display\n        // in the content display\n        return (\n            <div className='sidebar-nav'  >\n                <div className='sidebar-nav-head'>\n                    {/* <div className='sidebar-nav-header-icon'>\n                        <img src={ThumbnailPicture} alt='user-icon'/>\n                    </div> */}\n                    <SidebarUserPhoto />\n                    <div className='sidebar-nav-header-username'>\n                        <p>{this.props.username}</p>\n                    </div>\n                    <div className='sidebar-nav-header-settings'>\n                        <i className='fas fa-camera'></i>\n                    </div>\n                </div>\n                <div className='sidebar-nav-links'>\n                    <UserConsumer>\n                        {\n                            context => (\n                                <SidebarNavigation signOut={context.signOut} />\n                            )\n                        }\n                    </UserConsumer>\n                    \n                </div>\n\n                \n            </div>\n        );\n    }\n};\n\n\n\nclass SidebarUserPhoto extends Component {\n\n    state = {\n        upload: false,\n        fileURL: null,\n        file: null,\n    };\n\n    toggleOpenForm = () => {\n        console.log('open the fucking modal')\n        this.setState({upload: !this.state.upload});\n    };\n\n    handleFileChange = (e) => {\n        this.setState({\n            fileURL: URL.createObjectURL(e.target.files[0]),\n            file: e.target.files[0],\n        })\n        setTimeout(3000, console.log(this.state.file));\n    };\n\n    onFileSubmit = async (e) => {\n\n        e.preventDefault();\n        // send to the server,\n        const res = await fetch('/user/photo', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-type': 'multipart/form-data'\n            },\n            body: this.state.file\n\n        });\n\n        console.log(res);\n\n        // when the server responds that it works,\n        // retrieve user data from the server, so that the image update is displayed.\n\n        // close the modal.\n    }\n\n    render(){\n        if(this.state.upload){\n            return (\n                <React.Fragment>\n                    <div className='sidebar-nav-header-icon' onClick={this.toggleOpenForm}>\n                        <img src={ThumbnailPicture} alt='user-icon' onClick={this.toggleOpenForm}/>\n                    </div>\n                    <div className='modal-photo-upload'>\n                        <div className='modal-photo-upload-content'>\n                            <div className='modal-photo-upload-close'>\n                                <button className='close' onClick={this.toggleOpenForm}>X</button>\n                            </div>\n                            <div className='modal-photo-upload-form-container'>\n                                <form className='modal-photo-upload-form'>\n                                    <div className='modal-photo-upload-preview'>\n                                        <img src={this.state.fileURL ? this.state.fileURL : NoImage} alt='upload preview'/>\n                                    </div>\n                                    <input type='file' onChange={this.handleFileChange}>\n                                    </input>\n                                    <input type='submit' value='Upload' className='btn btn-primary btn-lg' onClick={this.onFileSubmit}/>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </React.Fragment>\n                \n                \n            )\n        } else {\n            return (\n                <div className='sidebar-nav-header-icon' onClick={this.toggleOpenForm}>\n                    <img src={ThumbnailPicture} alt='user-icon' onClick={this.toggleOpenForm}/>\n                </div>\n            )\n        }\n        \n    }\n}\n\nexport default sidebar;"]},"metadata":{},"sourceType":"module"}