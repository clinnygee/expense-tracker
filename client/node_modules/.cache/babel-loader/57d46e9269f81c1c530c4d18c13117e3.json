{"ast":null,"code":"var _jsxFileName = \"/home/clinnygee/Documents/portfolio-projects/expense-tracker/src/Components/App/MainAppContent/Charts/Charts.js\";\nimport React, { Component } from 'react';\nimport { RadialChart } from 'react-vis';\nimport './charts.css'; // the dash for charts, allows you to make a choice of what category you want to see,\n// date to be displayed is chosen in the Calender component. \n\nclass Charts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      category: null\n    };\n\n    this.handleCategorySelect = e => {\n      console.log(e.target.innerText);\n      this.setState({\n        category: e.target.innerText\n      });\n    };\n\n    this.getChartTransactions = () => {\n      if (!this.state.category) {\n        return this.props.transactions;\n      }\n\n      const type = this.state.category.toLowerCase();\n      const transactions = this.props.transactions.filter(transaction => {\n        return transaction.type === type;\n      });\n      return transactions;\n    };\n  }\n\n  // Some function, that from transactions, returns an object\n  render() {\n    if (this.state.category) {\n      this.getChartTransactions();\n      return React.createElement(\"div\", {\n        className: \"charts-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(CategorySelector, {\n        onCategorySelect: this.handleCategorySelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(ChartRenderer, {\n        category: this.state.category,\n        transactions: this.getChartTransactions(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"charts-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(CategorySelector, {\n        onCategorySelect: this.handleCategorySelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\n;\n\nconst CategorySelector = props => {\n  return React.createElement(\"div\", {\n    className: \"charts-categories\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"charts-categories-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    onClick: props.onCategorySelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Income\")), React.createElement(\"div\", {\n    className: \"charts-categories-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    onClick: props.onCategorySelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Expense\")), React.createElement(\"div\", {\n    className: \"charts-categories-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    onClick: props.onCategorySelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Both\")));\n};\n\nconst ChartRenderer = props => {\n  const createChartData = () => {\n    const data = [];\n    let sum = 0;\n    let found;\n    props.transactions.forEach(transaction => {\n      for (let i = 0; i < data.length; i++) {\n        if (data[i].category === transaction.category) {\n          data[i].amount += transaction.amount;\n          sum += transaction.amount;\n          found = true;\n          break;\n        }\n      }\n\n      ;\n\n      if (!found) {\n        data.push({\n          category: transaction.category,\n          amount: transaction.amount\n        });\n        sum += transaction.amount;\n      }\n    });\n  }; // angle is the % of the chart.\n\n\n  if (props.category) {\n    let myData = [{\n      angle: 1,\n      radius: 10,\n      label: 'eat pussy'\n    }, {\n      angle: 2,\n      label: 'Super Custom label',\n      subLabel: 'With annotation',\n      radius: 20\n    }, {\n      angle: 5,\n      radius: 5,\n      label: 'Alt Label'\n    }, {\n      angle: 3,\n      radius: 14\n    }, {\n      angle: 5,\n      radius: 12,\n      subLabel: 'Sub Label only',\n      className: 'custom-class'\n    }];\n    myData = [{\n      angle: .33,\n      radius: 10,\n      label: 'test'\n    }, {\n      angle: .66,\n      label: 'test 2'\n    }];\n    return React.createElement(\"div\", {\n      className: \"charts-display-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(RadialChart, {\n      data: myData,\n      width: 300,\n      height: 300,\n      showLabels: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }));\n  } else {\n    return null;\n  }\n};\n\nexport default Charts;","map":{"version":3,"sources":["/home/clinnygee/Documents/portfolio-projects/expense-tracker/src/Components/App/MainAppContent/Charts/Charts.js"],"names":["React","Component","RadialChart","Charts","state","category","handleCategorySelect","e","console","log","target","innerText","setState","getChartTransactions","props","transactions","type","toLowerCase","filter","transaction","render","CategorySelector","onCategorySelect","ChartRenderer","createChartData","data","sum","found","forEach","i","length","amount","push","myData","angle","radius","label","subLabel","className"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {RadialChart} from 'react-vis';\nimport './charts.css';\n\n\n// the dash for charts, allows you to make a choice of what category you want to see,\n// date to be displayed is chosen in the Calender component. \n\n\n\nclass Charts extends Component {\n\n    state = {\n        category: null,\n    }\n\n    handleCategorySelect = (e) => {\n        console.log(e.target.innerText);\n        this.setState({category: e.target.innerText})\n    };\n\n    // works\n    getChartTransactions = () => {\n\n        if(!this.state.category){\n            return this.props.transactions;\n        }\n\n        const type = this.state.category.toLowerCase();\n        \n        const transactions = this.props.transactions.filter(transaction => {\n            \n            return (transaction.type === type )\n        });\n\n        return transactions;\n    }\n\n    // Some function, that from transactions, returns an object\n\n    render() {\n\n        if(this.state.category){\n            this.getChartTransactions()\n        \n        \n        return (\n            <div className='charts-container'>\n                {/* category selector, options: income, expense, both */}\n                <CategorySelector onCategorySelect={this.handleCategorySelect}/>\n                <ChartRenderer category={this.state.category} transactions={this.getChartTransactions()}/>\n\n            </div>\n        );} else {\n            return (\n                <div className='charts-container'>\n                {/* category selector, options: income, expense, both */}\n                <CategorySelector onCategorySelect={this.handleCategorySelect}/>\n                {/* <ChartRenderer category={this.state.category}/> */}\n\n                </div>\n            )\n        }\n    }\n};\n\nconst CategorySelector = (props) => {\n\n    return (\n        <div className='charts-categories'>\n            <div className='charts-categories-item'>\n                <p onClick={props.onCategorySelect}>Income</p>\n            </div>\n            <div className='charts-categories-item'>\n                <p onClick={props.onCategorySelect}>Expense</p>\n            </div>\n            <div className='charts-categories-item'>\n                <p onClick={props.onCategorySelect}>Both</p>\n            </div>\n\n        </div>\n    )\n};\n\nconst ChartRenderer = (props) => {\n\n    const createChartData = () => {\n        const data = [];\n        let sum = 0;\n        let found;\n\n        props.transactions.forEach((transaction) => {\n\n            for(let i =0; i< data.length; i++){\n                if(data[i].category === transaction.category){\n                    data[i].amount += transaction.amount\n                    sum += transaction.amount;\n                    found = true;\n                    break;\n                }\n            };\n            if (!found){\n                data.push({category: transaction.category, amount: transaction.amount});\n                sum += transaction.amount;\n            }\n        })\n    }\n\n    // angle is the % of the chart.\n    if(props.category){\n        let myData = [ {angle: 1, radius: 10, label: 'eat pussy'}, {angle: 2, label: 'Super Custom label', subLabel: 'With annotation', radius: 20}, {angle: 5, radius: 5, label: 'Alt Label'}, {angle: 3, radius: 14}, {angle: 5, radius: 12, subLabel: 'Sub Label only', className: 'custom-class'} ];\n        myData = [{angle: .33, radius: 10, label: 'test'}, {angle: .66, label: 'test 2'}]\n        return(\n            <div className='charts-display-container'>\n                <RadialChart\n                    data={myData}\n                    width={300}\n                    height={300}\n                    showLabels={true}\n\n                />\n            </div>\n        )\n    } else {\n        return (\n            null\n        )\n    }\n};\n\n\nexport default Charts;"]},"metadata":{},"sourceType":"module"}