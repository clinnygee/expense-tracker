{"ast":null,"code":"var _jsxFileName = \"/home/clinnygee/Documents/portfolio-projects/expense-tracker/src/Components/Container/container.js\";\nimport React, { Component } from 'react';\nimport ToggleableForm from '../SignIn/ToggleableForm/ToggleableForm';\nimport './container.css';\n\nclass Container extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      resStatus: null,\n      loggedIn: false\n    };\n\n    this.handleSignUpForm = credentials => {\n      console.log(credentials);\n      return fetch('/register', {\n        method: 'post',\n        body: JSON.stringify(credentials),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(res => console.log(res));\n    };\n\n    this.handleLogInForm = credentials => {\n      return fetch('/login', {\n        method: 'post',\n        body: JSON.stringify(credentials),\n        headers: {\n          'Accept': 'application/json',\n          'content-type': 'application/json'\n        }\n      }).then(res => console.log(res));\n    };\n  }\n\n  componentWillMount() {// check if the user is already logged in.\n  }\n\n  render() {\n    if (this.state.loggedIn) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Logged in!\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(ToggleableForm, {\n        handleSignUpForm: this.handleSignUpForm,\n        handleLogInForm: this.handleLogInForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\n;\nexport default Container;","map":{"version":3,"sources":["/home/clinnygee/Documents/portfolio-projects/expense-tracker/src/Components/Container/container.js"],"names":["React","Component","ToggleableForm","Container","state","resStatus","loggedIn","handleSignUpForm","credentials","console","log","fetch","method","body","JSON","stringify","headers","then","res","handleLogInForm","componentWillMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,cAAP,MAA2B,yCAA3B;AACA,OAAO,iBAAP;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAE9BG,KAF8B,GAEtB;AACJC,MAAAA,SAAS,EAAE,IADP;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KAFsB;;AAAA,SAO9BC,gBAP8B,GAOVC,WAAD,IAAiB;AAChCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACA,aAAOG,KAAK,CAAC,WAAD,EAAe;AACvBC,QAAAA,MAAM,EAAE,MADe;AAEvBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,WAAf,CAFiB;AAGvBQ,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB;AAFT;AAHc,OAAf,CAAL,CAOFC,IAPE,CAOGC,GAAG,IAAIT,OAAO,CAACC,GAAR,CAAYQ,GAAZ,CAPV,CAAP;AAQH,KAjB6B;;AAAA,SAmB9BC,eAnB8B,GAmBXX,WAAD,IAAiB;AAE/B,aAAOG,KAAK,CAAC,QAAD,EAAW;AACnBC,QAAAA,MAAM,EAAE,MADW;AAEnBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,WAAf,CAFa;AAGnBQ,QAAAA,OAAO,EAAE;AACL,oBAAU,kBADL;AAEL,0BAAgB;AAFX;AAHU,OAAX,CAAL,CAOJC,IAPI,CAOCC,GAAG,IAAIT,OAAO,CAACC,GAAR,CAAYQ,GAAZ,CAPR,CAAP;AAQH,KA7B6B;AAAA;;AA+B9BE,EAAAA,kBAAkB,GAAE,CAChB;AACH;;AAEDC,EAAAA,MAAM,GAAE;AAEJ,QAAG,KAAKjB,KAAL,CAAWE,QAAd,EAAuB;AACnB,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ;AAGH,KAJD,MAIO;AACH,aACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AAAgB,QAAA,gBAAgB,EAAE,KAAKC,gBAAvC;AAAyD,QAAA,eAAe,EAAE,KAAKY,eAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAMH;AAEJ;;AAlD6B;;AAmDjC;AAED,eAAehB,SAAf","sourcesContent":["import React, {Component} from 'react'\nimport ToggleableForm from '../SignIn/ToggleableForm/ToggleableForm';\nimport './container.css';\n\nclass Container extends Component {\n\n    state = {\n        resStatus: null,\n        loggedIn: false,\n    }\n\n    handleSignUpForm = (credentials) => {\n        console.log(credentials);\n        return fetch('/register',  {\n            method: 'post',\n            body: JSON.stringify(credentials),\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n            },\n          }).then(res => console.log(res));\n    };\n\n    handleLogInForm = (credentials) => {\n\n        return fetch('/login', {\n            method: 'post',\n            body: JSON.stringify(credentials),\n            headers: {\n                'Accept': 'application/json',\n                'content-type': 'application/json',\n            },\n        }).then(res => console.log(res));\n    }\n\n    componentWillMount(){\n        // check if the user is already logged in.\n    }\n\n    render(){\n\n        if(this.state.loggedIn){\n            return (\n                <div>Logged in!</div>\n            )\n        } else {\n            return (\n                <div className='app'>\n                    <ToggleableForm handleSignUpForm={this.handleSignUpForm} handleLogInForm={this.handleLogInForm}/>\n                </div>\n                \n            )\n        }\n        \n    }\n};\n\nexport default Container;"]},"metadata":{},"sourceType":"module"}