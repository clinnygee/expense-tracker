{"ast":null,"code":"var _jsxFileName = \"/home/clinnygee/Documents/portfolio-projects/expense-tracker/src/Components/Container/container.js\";\nimport React, { Component } from 'react';\nimport ToggleableForm from '../SignIn/ToggleableForm/ToggleableForm';\nimport MainAppContainer from '../App/MainAppContainer';\nimport { Redirect } from 'react-router-dom';\nimport './container.css';\nimport { UserConsumer } from '../../user-context';\n\nclass Container extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loggedIn: false,\n      token: null\n    };\n\n    this.handleSignUpForm = credentials => {\n      console.log(credentials);\n      return fetch('/register', {\n        method: 'post',\n        body: JSON.stringify(credentials),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(res => console.log(res));\n    };\n\n    this.handleLogInForm = credentials => {\n      return fetch('/login', {\n        method: 'post',\n        body: JSON.stringify(credentials),\n        headers: {\n          'Accept': 'application/json',\n          'content-type': 'application/json'\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          res.json().then(res => {\n            this.handleLogInResponse(res);\n            this.props.logInSuccess();\n          });\n        } else {\n          console.log('No Token Authorized');\n        }\n      });\n    };\n\n    this.handleLogInResponse = res => {\n      // set the token in state, or in the context api.\n      // console.log(res.token);\n      sessionStorage.setItem('jwt', res.token);\n      this.props.setJwt(res.token); // this.setState({resStatus: res.status});\n      // console.log(sessionStorage.getItem('jwt'));\n      // console.log(res.json());\n    };\n\n    this.authenticateUser = () => {\n      let token = sessionStorage.getItem('jwt');\n      fetch('/checkToken', {\n        method: 'GET',\n        headers: {\n          'content-type': 'application/json',\n          'Authorization': \"Bearer \".concat(token)\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          this.props.setJwt(token);\n          this.props.logInSuccess();\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.authenticateUser(); // check if the user is storing a valid jwt.\n  }\n\n  render() {\n    console.log(this.props);\n\n    if (this.props.authenticated) {\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(UserConsumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, context => React.createElement(MainAppContainer, {\n        default: \"/dashboard\",\n        updateUserData: context.updateUserData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }))) // <Redirect to='/dashboard' />\n      ;\n    } else {\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(UserConsumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, context => React.createElement(ToggleableForm, {\n        handleSignUpForm: this.handleSignUpForm,\n        handleLogInForm: this.handleLogInForm,\n        logInSuccess: context.logInSuccess,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })));\n    }\n  }\n\n}\n\n;\nexport default Container;","map":{"version":3,"sources":["/home/clinnygee/Documents/portfolio-projects/expense-tracker/src/Components/Container/container.js"],"names":["React","Component","ToggleableForm","MainAppContainer","Redirect","UserConsumer","Container","state","loggedIn","token","handleSignUpForm","credentials","console","log","fetch","method","body","JSON","stringify","headers","then","res","handleLogInForm","status","json","handleLogInResponse","props","logInSuccess","sessionStorage","setItem","setJwt","authenticateUser","getItem","componentDidMount","render","authenticated","context","updateUserData"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport ToggleableForm from '../SignIn/ToggleableForm/ToggleableForm';\nimport MainAppContainer from '../App/MainAppContainer'\nimport {Redirect} from 'react-router-dom';\nimport './container.css';\nimport {UserConsumer} from '../../user-context';\n\nclass Container extends Component {\n\n    state = {\n        \n        \n        loggedIn: false,\n        token: null,\n    }\n\n    handleSignUpForm = (credentials) => {\n        console.log(credentials);\n        return fetch('/register',  {\n            method: 'post',\n            body: JSON.stringify(credentials),\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n            },\n          }).then(res => console.log(res));\n    };\n\n    \n\n    handleLogInForm = (credentials) => {\n\n        return fetch('/login', {\n            method: 'post',\n            body: JSON.stringify(credentials),\n            headers: {\n                'Accept': 'application/json',\n                'content-type': 'application/json',\n            },\n        }).then(res => {\n            if(res.status === 200){\n                \n                \n                res.json().then( res => {\n                    this.handleLogInResponse(res)\n                    this.props.logInSuccess();\n                });                              \n\n            } else {\n                console.log('No Token Authorized')\n            }\n        })\n        \n    };\n\n    handleLogInResponse = (res) => {\n        // set the token in state, or in the context api.\n        // console.log(res.token);\n        sessionStorage.setItem('jwt', res.token);\n        \n        this.props.setJwt(res.token);\n        // this.setState({resStatus: res.status});\n        // console.log(sessionStorage.getItem('jwt'));\n        // console.log(res.json());\n    };\n\n    authenticateUser = () => {\n        \n        let token = sessionStorage.getItem('jwt');\n\n        \n        fetch('/checkToken', {\n            method: 'GET',\n            headers : {\n                'content-type': 'application/json',\n                'Authorization': `Bearer ${token}`,\n            }\n        }).then(res => {\n            if(res.status === 200){\n                this.props.setJwt(token);\n                this.props.logInSuccess()\n            }\n            \n        })\n    }\n\n    componentDidMount(){\n        \n        this.authenticateUser();\n        // check if the user is storing a valid jwt.\n    };\n\n    render(){\n\n        console.log(this.props)\n\n        \n\n        if(this.props.authenticated){\n            return (\n                <div className='app'>\n                    <UserConsumer>\n                        {context => (\n                            <MainAppContainer default='/dashboard' updateUserData={context.updateUserData}/>\n                        )}\n                        \n                    </UserConsumer>\n                    \n                </div>\n                // <Redirect to='/dashboard' />\n            )\n        } else {\n            return (\n                <div className='app'>\n                    <UserConsumer>\n                        \n                        {\n                            context => (\n                            \n                            <ToggleableForm \n                        \n                            handleSignUpForm={this.handleSignUpForm} \n                            handleLogInForm={this.handleLogInForm}\n                            logInSuccess={context.logInSuccess}\n\n                            />     \n\n                            )}\n                    </UserConsumer>\n                    \n                </div>\n                \n            )\n        }\n        \n    }\n};\n\nexport default Container;"]},"metadata":{},"sourceType":"module"}